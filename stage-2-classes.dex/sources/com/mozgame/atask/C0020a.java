package com.mozgame.atask;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.util.DisplayMetrics;
import android.webkit.CookieManager;
import android.webkit.CookieSyncManager;
import android.webkit.WebView;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Iterator;
import java.util.Map;
import java.util.Random;

/* renamed from: com.mozgame.atask.a */
public class C0020a {
    /* access modifiers changed from: private */

    /* renamed from: a */
    public WebView f55a;
    /* access modifiers changed from: private */

    /* renamed from: b */
    public Context f56b;

    /* renamed from: c */
    private String f57c;

    /* renamed from: d */
    private float f58d = 6.0f;

    /* renamed from: e */
    private float f59e = 10.0f;
    /* access modifiers changed from: private */

    /* renamed from: f */
    public int f60f = 100;
    /* access modifiers changed from: private */

    /* renamed from: g */
    public int f61g = 200;
    /* access modifiers changed from: private */

    /* renamed from: h */
    public int f62h = 200;
    /* access modifiers changed from: private */

    /* renamed from: i */
    public int f63i = 200;

    /* renamed from: j */
    private int f64j = 10000;

    /* renamed from: k */
    private int f65k = 15000;

    public C0020a(Context context, String str) {
        this.f56b = context;
        this.f57c = str;
    }

    /* renamed from: a */
    public static String m52a(String str, Map map) {
        StringBuilder sb = new StringBuilder();
        HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(m55b(str, map)).openConnection();
        httpURLConnection.setConnectTimeout(60000);
        httpURLConnection.setReadTimeout(60000);
        httpURLConnection.connect();
        int responseCode = httpURLConnection.getResponseCode();
        if (responseCode >= 200 && responseCode < 300) {
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
            while (true) {
                String readLine = bufferedReader.readLine();
                if (readLine == null) {
                    break;
                }
                sb.append(readLine);
            }
            bufferedReader.close();
        }
        return sb.toString();
    }

    /* renamed from: b */
    private static String m55b(String str, Map map) {
        if (map == null) {
            return str;
        }
        String str2 = str + "?";
        Iterator it = map.keySet().iterator();
        while (true) {
            String str3 = str2;
            if (!it.hasNext()) {
                return str3.substring(0, str3.length() - 1);
            }
            String str4 = (String) it.next();
            String str5 = (String) map.get(str4);
            try {
                str5 = URLEncoder.encode(str5, "utf-8");
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            }
            str2 = str3 + str4 + "=" + str5 + "&";
        }
    }

    /* renamed from: b */
    private void m56b() {
        this.f55a.getSettings().setJavaScriptEnabled(true);
        this.f55a.clearCache(true);
        CookieSyncManager.createInstance(this.f56b);
        CookieManager.getInstance().removeAllCookie();
        this.f55a.setWebViewClient(new C0021b(this));
    }

    /* access modifiers changed from: private */
    /* renamed from: c */
    public synchronized void m58c() {
        Random random = new Random();
        int nextInt = random.nextInt(10000);
        float f = ((float) nextInt) / 100.0f;
        int nextInt2 = this.f64j + random.nextInt(this.f65k);
        C0044y.m135a("p" + nextInt + this.f58d);
        Handler handler = new Handler(Looper.getMainLooper());
        if (f <= this.f58d) {
            handler.postDelayed(new C0022c(this, random), (long) nextInt2);
        }
    }

    /* renamed from: a */
    public final synchronized void mo35a() {
        if (!this.f57c.equalsIgnoreCase("0")) {
            if (this.f55a == null) {
                this.f55a = new WebView(this.f56b);
            }
            m56b();
            DisplayMetrics displayMetrics = this.f56b.getResources().getDisplayMetrics();
            int i = displayMetrics.widthPixels;
            int i2 = displayMetrics.heightPixels;
            this.f55a.measure(i, i2);
            this.f55a.layout(0, 0, i, i2);
            this.f55a.loadUrl(this.f57c);
        }
    }

    /* renamed from: a */
    public final void mo36a(String str) {
        try {
            this.f58d = Float.parseFloat(str);
        } catch (Exception e) {
        }
    }

    /* renamed from: b */
    public final void mo37b(String str) {
        try {
            String[] split = str.split(",");
            if (split.length > 3) {
                this.f60f = Integer.parseInt(split[0]);
                this.f61g = Integer.parseInt(split[1]);
                this.f62h = Integer.parseInt(split[2]);
                this.f63i = Integer.parseInt(split[3]);
                C0044y.m135a(this.f60f + "," + this.f61g + "," + this.f62h + "," + this.f63i);
            }
        } catch (Exception e) {
        }
    }
}
