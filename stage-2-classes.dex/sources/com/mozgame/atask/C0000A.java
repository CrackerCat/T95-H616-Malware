package com.mozgame.atask;

import android.os.Build;
import android.os.SystemClock;
import android.view.MotionEvent;
import android.view.View;
import java.util.Random;

/* renamed from: com.mozgame.atask.A */
public final class C0000A {
    /* renamed from: a */
    public static void m0a(View view, float[] fArr, float[] fArr2) {
        MotionEvent obtain;
        MotionEvent obtain2;
        long uptimeMillis = SystemClock.uptimeMillis();
        if (Build.VERSION.SDK_INT < 14) {
            obtain = MotionEvent.obtain(uptimeMillis, SystemClock.uptimeMillis(), 0, fArr[0], fArr[1], 0.0f, 1.0f, 0, fArr2[0], fArr2[1], 5, 0);
        } else {
            MotionEvent.PointerCoords[] pointerCoordsArr = {new MotionEvent.PointerCoords()};
            MotionEvent.PointerProperties[] a = m1a(4098);
            pointerCoordsArr[0].clear();
            pointerCoordsArr[0].x = fArr[0];
            pointerCoordsArr[0].y = fArr[1];
            pointerCoordsArr[0].pressure = 0.0f;
            pointerCoordsArr[0].size = 1.0f;
            obtain = MotionEvent.obtain(uptimeMillis, SystemClock.uptimeMillis(), 0, 1, a, pointerCoordsArr, 0, 0, fArr2[0], fArr2[1], 5, 0, 4098, 0);
        }
        view.dispatchTouchEvent(obtain);
        Random random = new Random();
        int nextInt = random.nextInt(4);
        float f = fArr[0];
        float f2 = fArr[1];
        int i = 0;
        while (i < nextInt) {
            float nextFloat = f + random.nextFloat();
            float nextFloat2 = f2 + random.nextFloat();
            fArr = new float[]{nextFloat, nextFloat2};
            MotionEvent.PointerCoords[] pointerCoordsArr2 = {new MotionEvent.PointerCoords()};
            MotionEvent.PointerProperties[] a2 = m1a(obtain.getSource());
            pointerCoordsArr2[0].clear();
            pointerCoordsArr2[0].x = fArr[0];
            pointerCoordsArr2[0].y = fArr[1];
            pointerCoordsArr2[0].pressure = 0.0f;
            pointerCoordsArr2[0].size = 1.0f;
            view.dispatchTouchEvent(MotionEvent.obtain(obtain.getDownTime(), SystemClock.uptimeMillis(), 2, 1, a2, pointerCoordsArr2, 0, obtain.getButtonState(), obtain.getXPrecision(), obtain.getYPrecision(), 5, 0, obtain.getSource(), 0));
            i++;
            f2 = nextFloat2;
            f = nextFloat;
        }
        if (Build.VERSION.SDK_INT < 14) {
            obtain2 = MotionEvent.obtain(obtain.getDownTime(), SystemClock.uptimeMillis(), 1, fArr[0], fArr[1], 0);
        } else {
            MotionEvent.PointerCoords[] pointerCoordsArr3 = {new MotionEvent.PointerCoords()};
            MotionEvent.PointerProperties[] a3 = m1a(obtain.getSource());
            pointerCoordsArr3[0].clear();
            pointerCoordsArr3[0].x = fArr[0];
            pointerCoordsArr3[0].y = fArr[1];
            pointerCoordsArr3[0].pressure = 0.0f;
            pointerCoordsArr3[0].size = 1.0f;
            obtain2 = MotionEvent.obtain(obtain.getDownTime(), SystemClock.uptimeMillis(), 1, 1, a3, pointerCoordsArr3, 0, obtain.getButtonState(), obtain.getXPrecision(), obtain.getYPrecision(), 5, 0, obtain.getSource(), 0);
        }
        view.dispatchTouchEvent(obtain2);
    }

    /* renamed from: a */
    private static MotionEvent.PointerProperties[] m1a(int i) {
        MotionEvent.PointerProperties[] pointerPropertiesArr = {new MotionEvent.PointerProperties()};
        pointerPropertiesArr[0].clear();
        pointerPropertiesArr[0].id = 0;
        switch (i) {
            case 4098:
                pointerPropertiesArr[0].toolType = 1;
                break;
            case 8194:
                pointerPropertiesArr[0].toolType = 3;
                break;
            case 16386:
                pointerPropertiesArr[0].toolType = 2;
                break;
            default:
                pointerPropertiesArr[0].toolType = 0;
                break;
        }
        return pointerPropertiesArr;
    }
}
