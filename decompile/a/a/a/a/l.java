package a.a.a.a;

import java.net.InetAddress;
import java.net.UnknownHostException;
import java.nio.ByteBuffer;
import java.util.ArrayList;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class l {

    /* renamed from: a  reason: collision with root package name */
    private final byte[] f340a;
    private byte[] b;
    private boolean c;
    private boolean d;
    private boolean e;
    private boolean f;

    /* renamed from: g  reason: collision with root package name */
    private boolean f341g;
    private int h;
    private int i;
    private int k;
    private int l;
    private final j[] n;
    private p p;
    private boolean q;
    private ArrayList o = new ArrayList();
    private int j;
    private final j[] m = new j[this.j];

    public l(byte[] bArr) {
        this.q = false;
        this.f340a = bArr;
        e();
        int c = c();
        for (int i = 0; i < this.j; i++) {
            this.m[i] = a(c);
            c += this.m[i].a();
        }
        for (int i2 = 0; i2 < this.k; i2++) {
            c += a(c).a();
        }
        this.n = new j[this.l];
        for (int i3 = 0; i3 < this.l; i3++) {
            this.n[i3] = a(c);
            c += this.n[i3].a();
        }
        try {
            d();
        } catch (o unused) {
            this.q = true;
        }
        f();
    }

    private int a(byte b, int i) {
        return (b >> i) & 1;
    }

    private j a(int i) {
        String a2;
        j jVar = new j(this.d);
        q b = b(i);
        int a3 = b.a() + i;
        jVar.a(b.b());
        byte[] bArr = this.f340a;
        jVar.a(a(new byte[]{bArr[a3], bArr[a3 + 1]}));
        int i2 = a3 + 2;
        byte[] bArr2 = this.f340a;
        byte[] bArr3 = {bArr2[i2], bArr2[i2 + 1]};
        if (bArr3[0] == 0 || bArr3[1] == 1) {
            jVar.a(bArr3);
            int i3 = i2 + 2;
            byte[] bArr4 = this.f340a;
            jVar.b(ByteBuffer.wrap(new byte[]{bArr4[i3], bArr4[i3 + 1], bArr4[i3 + 2], bArr4[i3 + 3]}).getInt());
            int i4 = i3 + 4;
            byte[] bArr5 = this.f340a;
            short s = ByteBuffer.wrap(new byte[]{bArr5[i4], bArr5[i4 + 1]}).getShort();
            jVar.c(s);
            int i5 = i4 + 2;
            int i6 = m.f342a[jVar.c().ordinal()];
            if (i6 == 1) {
                a2 = a(s, i5);
            } else if (i6 == 2) {
                a2 = b(s, i5);
            } else if (i6 != 3) {
                if (i6 == 4) {
                    a2 = c(s, i5);
                }
                jVar.a((i5 + s) - i);
                return jVar;
            } else {
                a2 = a(s, i5, jVar);
            }
            jVar.b(a2);
            jVar.a((i5 + s) - i);
            return jVar;
        }
        throw new RuntimeException("ERROR\tThe class field in the response answer is not 1");
    }

    private p a(byte[] bArr) {
        return bArr[0] == 0 ? bArr[1] == 1 ? p.A : bArr[1] == 2 ? p.NS : bArr[1] == 15 ? p.MX : bArr[1] == 5 ? p.CNAME : p.OTHER : p.OTHER;
    }

    private String a(int i, int i2) {
        byte[] bArr = this.f340a;
        try {
            return InetAddress.getByAddress(new byte[]{bArr[i2], bArr[i2 + 1], bArr[i2 + 2], bArr[i2 + 3]}).toString().substring(1);
        } catch (UnknownHostException e) {
            e.printStackTrace();
            return "";
        }
    }

    private String a(int i, int i2, j jVar) {
        byte[] bArr = this.f340a;
        jVar.d(ByteBuffer.wrap(new byte[]{bArr[i2], bArr[i2 + 1]}).getShort());
        return b(i2 + 2).b();
    }

    private q b(int i) {
        q qVar = new q();
        byte b = this.f340a[i];
        String str = "";
        int i2 = 0;
        boolean z = true;
        while (b != 0) {
            if (!z) {
                str = str + ".";
            }
            if ((b & 192) == 192) {
                byte[] bArr = this.f340a;
                i += 2;
                i2 += 2;
                str = str + b(ByteBuffer.wrap(new byte[]{(byte) (bArr[i] & 63), bArr[i + 1]}).getShort()).b();
                b = 0;
            } else {
                str = str + c(i);
                int i3 = b + 1;
                i += i3;
                i2 += i3;
                b = this.f340a[i];
            }
            z = false;
        }
        qVar.a(str);
        qVar.a(i2);
        return qVar;
    }

    private String b(int i, int i2) {
        return b(i2).b();
    }

    private int c() {
        this.o.clear();
        int i = 12;
        while (true) {
            byte[] bArr = this.f340a;
            int i2 = i + 1;
            int i3 = bArr[i];
            int i4 = 0;
            if (i3 == 0) {
                this.p = a(new byte[]{bArr[i2], bArr[i2 + 1]});
                return i2 + 2 + 2;
            }
            byte[] bArr2 = new byte[i3];
            while (i4 < i3) {
                bArr2[i4] = this.f340a[i2];
                i4++;
                i2++;
            }
            this.o.add(bArr2);
            i = i2;
        }
    }

    private String c(int i) {
        String str = "";
        for (int i2 = 0; i2 < this.f340a[i]; i2++) {
            str = str + ((char) this.f340a[i + i2 + 1]);
        }
        return str;
    }

    private String c(int i, int i2) {
        return b(i2).b();
    }

    private void d() {
        int i = this.h;
        if (i != 1) {
            if (i == 2) {
                throw new RuntimeException("Server failure: the name server was unable to process this query due to a problem with the name server");
            }
            if (i == 3) {
                throw new o();
            }
            if (i == 4) {
                throw new RuntimeException("Not implemented: the name server does not support the requested kind of query");
            }
            if (i == 5) {
                throw new RuntimeException("Refused: the name server refuses to perform the requested operation for policy reasons");
            }
            return;
        }
        throw new RuntimeException("Format error: the name server was unable to interpret the query");
    }

    private void e() {
        byte[] bArr = this.f340a;
        this.b = new byte[]{bArr[0], bArr[1]};
        this.c = a(bArr[2], 7) == 1;
        this.d = a(this.f340a[2], 2) == 1;
        this.e = a(this.f340a[2], 1) == 1;
        this.f = a(this.f340a[2], 0) == 1;
        this.f341g = a(this.f340a[3], 7) == 1;
        byte[] bArr2 = this.f340a;
        this.h = bArr2[3] & 15;
        this.i = ByteBuffer.wrap(new byte[]{bArr2[4], bArr2[5]}).getShort();
        byte[] bArr3 = this.f340a;
        this.j = ByteBuffer.wrap(new byte[]{bArr3[6], bArr3[7]}).getShort();
        byte[] bArr4 = this.f340a;
        this.k = ByteBuffer.wrap(new byte[]{bArr4[8], bArr4[9]}).getShort();
        byte[] bArr5 = this.f340a;
        this.l = ByteBuffer.wrap(new byte[]{bArr5[10], bArr5[11]}).getShort();
    }

    private void f() {
        if (this.c) {
            return;
        }
        throw new RuntimeException("ERROR\tInvalid response from server: Message is not a response");
    }

    public ArrayList a() {
        return this.o;
    }

    public j[] b() {
        return this.m;
    }
}
