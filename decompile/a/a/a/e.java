package a.a.a;

import android.os.Build;
import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.SocketOption;
import java.net.StandardSocketOptions;
import java.nio.ByteBuffer;
import java.nio.channels.Selector;
import java.nio.channels.SocketChannel;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class e implements a.a.a.a.e {

    /* renamed from: a  reason: collision with root package name */
    private Selector f357a = null;
    private long b = -1;
    private SocketChannel c = null;
    private int d = 0;
    private final byte[] e = new byte[4096];
    private int f = 0;

    /* renamed from: g  reason: collision with root package name */
    private j f358g = null;
    private final d h = new d();

    public long a() {
        return this.b;
    }

    @Override // a.a.a.a.e
    public void a(String str, a.a.a.a.c cVar, InetAddress inetAddress) {
        b.a("QueryResult: " + str + ", Result=" + cVar + ", Address=" + inetAddress);
        try {
            if (cVar != a.a.a.a.c.FAILED && inetAddress != null && this.c != null) {
                this.c.connect(new InetSocketAddress(inetAddress, this.d));
                this.c.register(this.f357a, 9, this);
                return;
            }
        } catch (IOException unused) {
        }
        ae.a(this.b);
        ae.a(this, true);
    }

    public void a(byte[] bArr) {
        if (bArr.length <= 4096) {
            c d = this.h.d();
            ByteBuffer wrap = ByteBuffer.wrap(bArr);
            if (!b().isConnected() || d != null) {
                c cVar = new c();
                cVar.f355a.put(wrap.array(), wrap.position(), wrap.remaining());
                cVar.f355a.flip();
                this.h.a(cVar);
                return;
            }
            this.c.write(wrap);
            if (wrap.remaining() <= 0) {
                return;
            }
            c cVar2 = new c();
            cVar2.f355a.put(wrap.array(), wrap.position(), wrap.remaining());
            cVar2.f355a.flip();
            this.h.a(cVar2);
            this.c.register(this.f357a, 5, this);
            return;
        }
        throw new RuntimeException("Invalid packet size, find the bug!");
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public boolean a(long j, String str, int i, a.a.a.a.d dVar, Selector selector) {
        this.f357a = selector;
        this.b = -1L;
        try {
            SocketChannel open = SocketChannel.open();
            this.c = open;
            open.configureBlocking(false);
            if (Build.VERSION.SDK_INT >= 24) {
                this.c.setOption((SocketOption<SocketOption>) StandardSocketOptions.SO_RCVBUF, (SocketOption) 4096000);
                this.c.setOption((SocketOption<SocketOption>) StandardSocketOptions.SO_SNDBUF, (SocketOption) 4096000);
            }
            this.d = i;
            dVar.a(str, this);
            b.a("ConnectionWithHost: socket=" + this.c);
            this.b = j;
            return true;
        } catch (IOException unused) {
            b.b("Failed to open channel");
            return false;
        }
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public boolean a(long j, InetSocketAddress inetSocketAddress, Selector selector) {
        this.f357a = selector;
        this.b = -1L;
        try {
            SocketChannel open = SocketChannel.open();
            this.c = open;
            open.configureBlocking(false);
            this.c.connect(inetSocketAddress);
            this.c.register(selector, 9, this);
            if (Build.VERSION.SDK_INT >= 24) {
                this.c.setOption((SocketOption<SocketOption>) StandardSocketOptions.SO_KEEPALIVE, (SocketOption) true);
                this.c.setOption((SocketOption<SocketOption>) StandardSocketOptions.SO_RCVBUF, (SocketOption) 4096000);
                this.c.setOption((SocketOption<SocketOption>) StandardSocketOptions.SO_SNDBUF, (SocketOption) 4096000);
            }
            this.b = j;
            return true;
        } catch (IOException unused) {
            b.b("Failed to open channel");
            return false;
        }
    }

    public SocketChannel b() {
        return this.c;
    }

    public int c() {
        return this.h.b();
    }

    public int d() {
        return d.a();
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    /* JADX WARN: Type inference failed for: r0v6, types: [java.nio.channels.SocketChannel, java.nio.channels.Selector] */
    public void e() {
        b.a("Cleaning: socket=" + this.c);
        this.h.f();
        this.f = 0;
        this.f358g = null;
        try {
            try {
                SocketChannel socketChannel = this.c;
                if (socketChannel != null) {
                    socketChannel.close();
                }
            } catch (IOException unused) {
                b.b("Closing channel error");
            }
        } finally {
            this.c = null;
            this.b = -1L;
            this.f357a = null;
        }
    }

    public f f() {
        byte[] bArr = this.e;
        int i = this.f;
        int read = this.c.read(ByteBuffer.wrap(bArr, i, bArr.length - i));
        if (read >= 0) {
            if (read > 0) {
                this.f += read;
            }
            int i2 = this.f;
            if (i2 < 32) {
                return null;
            }
            if (this.f358g == null) {
                ByteBuffer wrap = ByteBuffer.wrap(this.e, 0, i2);
                wrap.order(i.f363a);
                j a2 = i.a(wrap);
                this.f358g = a2;
                if (a2 == null) {
                    throw new IOException("Invalid packet header");
                }
            }
            if (this.f < this.f358g.f364a) {
                return null;
            }
            int b = this.f358g.b();
            byte[] bArr2 = new byte[b];
            System.arraycopy(this.e, this.f358g.a(), bArr2, 0, b);
            this.f -= this.f358g.f364a;
            System.arraycopy(this.e, this.f358g.f364a, this.e, 0, this.f);
            f fVar = new f(this.f358g, bArr2);
            this.f358g = null;
            return fVar;
        }
        throw new IOException("prx server close");
    }

    public void g() {
        while (true) {
            c c = this.h.c();
            if (c == null) {
                if (this.h.c() != null) {
                    return;
                }
                this.c.register(this.f357a, 1, this);
                return;
            }
            this.c.write(c.f355a);
            if (c.f355a.remaining() > 0) {
                this.c.register(this.f357a, 5, this);
                return;
            }
            this.h.e();
        }
    }
}
