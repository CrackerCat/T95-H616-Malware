package com.unia.y;

import android.util.Log;
import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class ae {
    private void a(Socket socket, long j) {
        OutputStream outputStream = socket.getOutputStream();
        outputStream.write(y.a(j));
        outputStream.flush();
    }

    public void a(String str, int i, String str2, int i2, long j) {
        Socket socket;
        Socket socket2 = null;
        al alVar = null;
        try {
            Socket socket3 = new Socket();
            try {
                socket3.connect(new InetSocketAddress(str, i), 3000);
                socket = new Socket();
            } catch (Throwable unused) {
                socket = null;
            }
            try {
                socket.connect(new InetSocketAddress(str2, i2), 3000);
                a(socket3, j);
                try {
                    al alVar2 = new al(socket3, socket);
                    try {
                        alVar2.a();
                        while (alVar2.e()) {
                            try {
                                Thread.sleep(1000L);
                            } catch (InterruptedException unused2) {
                                alVar2.b();
                                socket3.close();
                                socket.close();
                            }
                        }
                        try {
                            socket3.close();
                        } catch (IOException unused3) {
                        }
                        try {
                            socket.close();
                        } catch (IOException unused4) {
                        }
                        alVar2.b();
                    } catch (Throwable th) {
                        th = th;
                        alVar = alVar2;
                        try {
                            au.a(Log.getStackTraceString(th));
                        } finally {
                            try {
                                socket3.close();
                            } catch (IOException unused5) {
                            }
                            try {
                                socket.close();
                            } catch (IOException unused6) {
                            }
                            if (alVar != null) {
                                alVar.b();
                            }
                        }
                    }
                } catch (Throwable th2) {
                    th = th2;
                }
            } catch (Throwable unused7) {
                socket2 = socket3;
                if (socket2 != null) {
                    try {
                        socket2.close();
                    } catch (IOException unused8) {
                    }
                }
                if (socket == null) {
                    return;
                }
                try {
                    socket.close();
                } catch (IOException unused9) {
                }
            }
        } catch (Throwable unused10) {
            socket = null;
        }
    }
}
