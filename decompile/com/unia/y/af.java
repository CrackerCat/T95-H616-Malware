package com.unia.y;

import android.util.Log;
import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class af {
    private void a(Socket socket, long j, byte b) {
        OutputStream outputStream = socket.getOutputStream();
        outputStream.write(y.a(j, b));
        outputStream.flush();
    }

    public void a(String str, int i, String str2, int i2, long j) {
        Socket socket;
        Object obj;
        Socket socket2 = null;
        al alVar = null;
        try {
            au.a("doConnect inputSocket");
            Socket socket3 = new Socket();
            try {
                socket3.setSoTimeout(60000);
                socket3.connect(new InetSocketAddress(str, i), 3000);
                au.a("doConnect outputSocket");
                socket = new Socket();
                try {
                    socket3.setSoTimeout(60000);
                    socket.connect(new InetSocketAddress(str2, i2), 3000);
                    au.a("doConnect sendConnectionMessage");
                    a(socket3, j, (byte) 1);
                    try {
                        al alVar2 = new al(socket3, socket);
                        try {
                            alVar2.a();
                            while (alVar2.e()) {
                                try {
                                    Thread.sleep(1000L);
                                } catch (InterruptedException unused) {
                                    alVar2.b();
                                    socket3.close();
                                    socket.close();
                                }
                            }
                            try {
                                socket3.close();
                            } catch (IOException unused2) {
                            }
                            try {
                                socket.close();
                            } catch (IOException unused3) {
                            }
                            alVar2.b();
                        } catch (Throwable th) {
                            th = th;
                            alVar = alVar2;
                            try {
                                au.a(Log.getStackTraceString(th));
                            } finally {
                                try {
                                    socket3.close();
                                } catch (IOException unused4) {
                                }
                                try {
                                    socket.close();
                                } catch (IOException unused5) {
                                }
                                if (alVar != null) {
                                    alVar.b();
                                }
                            }
                        }
                    } catch (Throwable th2) {
                        th = th2;
                    }
                } catch (Throwable th3) {
                    th = th3;
                    socket2 = socket3;
                    obj = th;
                    byte b = 0;
                    if (obj instanceof UnknownHostException) {
                        b = 2;
                    } else if (obj instanceof SocketTimeoutException) {
                        b = 3;
                    }
                    if (socket2 != null) {
                        try {
                            a(socket2, j, b);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                    if (socket2 != null) {
                        try {
                            socket2.close();
                        } catch (IOException unused6) {
                        }
                    }
                    if (socket == null) {
                        return;
                    }
                    try {
                        socket.close();
                    } catch (IOException unused7) {
                    }
                }
            } catch (Throwable th4) {
                th = th4;
                socket = null;
            }
        } catch (Throwable th5) {
            socket = null;
            obj = th5;
        }
    }
}
