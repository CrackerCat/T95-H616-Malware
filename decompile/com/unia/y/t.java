package com.unia.y;

import android.util.Log;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import org.json.JSONException;
import org.json.JSONObject;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class t {

    /* renamed from: a  reason: collision with root package name */
    private ExecutorService f595a = Executors.newSingleThreadExecutor();
    private Future b;
    private v c;
    private JSONObject d;
    private String e;
    private int f;

    /* renamed from: g  reason: collision with root package name */
    private String f596g;
    private int h;

    private static boolean a(Object obj, Object obj2) {
        return obj == obj2 || (obj != null && obj.equals(obj2));
    }

    public JSONObject a() {
        try {
            this.d.put("alive", d());
            this.d.put("last_hb", this.c.d());
            this.d.put("first_hb", this.c.a());
        } catch (Exception unused) {
        }
        return this.d;
    }

    public void a(final String str, final int i, final String str2, final int i2) {
        JSONObject jSONObject = new JSONObject();
        this.d = jSONObject;
        try {
            jSONObject.put("ip", str);
            this.d.put("port", i);
            this.d.put("session_id", str2);
            this.h = this.d.optInt("heartbeat_interval", 15000);
        } catch (JSONException unused) {
        }
        this.b = this.f595a.submit(new Runnable() { // from class: com.unia.y.t.2
            @Override // java.lang.Runnable
            public void run() {
                try {
                    t.this.c = new v();
                    t.this.c.a(str, i, str2, i2);
                } catch (Exception e) {
                    au.a(Log.getStackTraceString(e));
                }
            }
        });
    }

    public void a(JSONObject jSONObject) {
        try {
            this.e = jSONObject.getString("ip");
            this.f = jSONObject.getInt("port");
            this.f596g = jSONObject.getString("session_id");
            this.h = jSONObject.optInt("heartbeat_interval", 15000);
            this.d = jSONObject;
            b();
        } catch (Throwable unused) {
        }
    }

    public void b() {
        try {
            this.b = this.f595a.submit(new Runnable() { // from class: com.unia.y.t.1
                @Override // java.lang.Runnable
                public void run() {
                    try {
                        t.this.c = new v();
                        t.this.c.a(t.this.e, t.this.f, t.this.f596g, t.this.h);
                    } catch (Exception e) {
                        au.a(Log.getStackTraceString(e));
                    }
                }
            });
        } catch (Throwable unused) {
        }
    }

    public void b(JSONObject jSONObject) {
        try {
            this.e = jSONObject.getString("ip");
            this.f = jSONObject.getInt("port");
            this.f596g = jSONObject.getString("session_id");
            this.h = jSONObject.optInt("heartbeat_interval", 15000);
            this.d = jSONObject;
        } catch (JSONException unused) {
        }
    }

    public void c() {
        au.a("close:" + this.f596g);
        try {
            Future future = this.b;
            if (future != null) {
                future.cancel(true);
            }
        } catch (Exception unused) {
        }
        try {
            v vVar = this.c;
            if (vVar != null) {
                vVar.e();
            }
        } catch (Exception unused2) {
        }
        try {
            ExecutorService executorService = this.f595a;
            if (executorService == null) {
                return;
            }
            executorService.shutdownNow();
        } catch (Exception unused3) {
        }
    }

    public boolean d() {
        try {
            if (!this.c.c() || this.c == null) {
                return false;
            }
            return System.currentTimeMillis() - this.c.d() < ((long) (this.h * 5));
        } catch (Exception unused) {
            return false;
        }
    }

    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || getClass() != obj.getClass()) {
            return false;
        }
        t tVar = (t) obj;
        return this.f == tVar.f && a(this.e, tVar.e);
    }
}
