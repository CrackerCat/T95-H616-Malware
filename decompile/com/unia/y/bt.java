package com.unia.y;

import android.content.Context;
import android.location.Location;
import android.location.LocationManager;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.provider.Settings;
import android.telephony.TelephonyManager;
import android.telephony.cdma.CdmaCellLocation;
import android.telephony.gsm.GsmCellLocation;
import android.text.TextUtils;
import android.util.DisplayMetrics;
import java.net.NetworkInterface;
import java.util.Collections;
import java.util.Locale;
import org.json.JSONObject;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class bt {

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public static class a {

        /* renamed from: a  reason: collision with root package name */
        private int f524a;
        private int b;
        private String c;
        private int d;
        private int e;
        private int f;

        public void a(int i) {
            this.f524a = i;
        }

        public void a(String str) {
            this.c = str;
        }

        public void b(int i) {
            this.b = i;
        }

        public void c(int i) {
            this.d = i;
        }

        public void d(int i) {
            this.e = i;
        }

        public void e(int i) {
            this.f = i;
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public static class b extends Exception {
    }

    private static String a() {
        for (NetworkInterface networkInterface : Collections.list(NetworkInterface.getNetworkInterfaces())) {
            if (networkInterface.getName().equalsIgnoreCase("wlan0")) {
                byte[] hardwareAddress = networkInterface.getHardwareAddress();
                if (hardwareAddress == null) {
                    return "";
                }
                StringBuilder sb = new StringBuilder();
                int length = hardwareAddress.length;
                for (int i = 0; i < length; i++) {
                    sb.append(String.format("%02X:", Byte.valueOf(hardwareAddress[i])));
                }
                if (sb.length() > 0) {
                    sb.deleteCharAt(sb.length() - 1);
                }
                return sb.toString();
            }
        }
        return null;
    }

    public static String a(Context context) {
        DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();
        System.out.println("heigth2 : " + displayMetrics.heightPixels);
        System.out.println("width2 : " + displayMetrics.widthPixels);
        return displayMetrics.heightPixels + "*" + displayMetrics.widthPixels;
    }

    public static String b(Context context) {
        if (context.checkCallingOrSelfPermission("android.permission.READ_PHONE_STATE") == 0) {
            return ((TelephonyManager) context.getSystemService("phone")).getSubscriberId();
        }
        throw new b();
    }

    public static String c(Context context) {
        if (context.checkCallingOrSelfPermission("android.permission.READ_PHONE_STATE") == 0) {
            return ((TelephonyManager) context.getSystemService("phone")).getDeviceId();
        }
        throw new b();
    }

    public static String d(Context context) {
        return "" + Settings.Secure.getString(context.getContentResolver(), "android_id");
    }

    public static a e(Context context) {
        if (context.checkCallingOrSelfPermission("android.permission.ACCESS_COARSE_LOCATION") == 0) {
            TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService("phone");
            a aVar = new a();
            if (telephonyManager.getPhoneType() == 1) {
                GsmCellLocation gsmCellLocation = (GsmCellLocation) telephonyManager.getCellLocation();
                int lac = gsmCellLocation.getLac();
                int cid = gsmCellLocation.getCid();
                aVar.a(lac);
                aVar.b(cid);
                aVar.a("GSM");
            }
            if (telephonyManager.getPhoneType() == 2) {
                CdmaCellLocation cdmaCellLocation = (CdmaCellLocation) telephonyManager.getCellLocation();
                aVar.a("CDMA");
                aVar.c(cdmaCellLocation.getSystemId());
                aVar.d(cdmaCellLocation.getNetworkId());
                aVar.e(cdmaCellLocation.getBaseStationId());
            }
            return aVar;
        }
        throw new b();
    }

    public static String f(Context context) {
        a e = e(context);
        JSONObject jSONObject = new JSONObject();
        jSONObject.put("baseType", e.c);
        jSONObject.put("bid", e.f);
        jSONObject.put("cid", e.b);
        jSONObject.put("lac", e.f524a);
        jSONObject.put("sid", e.d);
        jSONObject.put("nid", e.e);
        return jSONObject.toString();
    }

    public static String g(Context context) {
        return Build.VERSION.SDK_INT < 23 ? m(context) : a();
    }

    public static String h(Context context) {
        return ((TelephonyManager) context.getSystemService("phone")).getSimOperator();
    }

    public static String i(Context context) {
        Location j = j(context);
        if (j != null) {
            return "" + j.getLatitude() + "," + j.getLongitude();
        }
        return null;
    }

    public static Location j(Context context) {
        if (context.checkCallingOrSelfPermission("android.permission.ACCESS_COARSE_LOCATION") == 0) {
            if (context.checkCallingOrSelfPermission("android.permission.ACCESS_FINE_LOCATION") != 0) {
                throw new b();
            }
            Location location = null;
            try {
                LocationManager locationManager = (LocationManager) context.getSystemService("location");
                for (String str : locationManager.getProviders(true)) {
                    Location lastKnownLocation = locationManager.getLastKnownLocation(str);
                    if (lastKnownLocation != null && (location == null || lastKnownLocation.getAccuracy() < location.getAccuracy())) {
                        location = lastKnownLocation;
                    }
                }
            } catch (Throwable th) {
                th.printStackTrace();
            }
            return location;
        }
        throw new b();
    }

    public static int k(Context context) {
        if (context.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") == 0) {
            NetworkInfo activeNetworkInfo = ((ConnectivityManager) context.getSystemService("connectivity")).getActiveNetworkInfo();
            if (activeNetworkInfo != null && activeNetworkInfo.isAvailable()) {
                return activeNetworkInfo.getType();
            }
            return -1;
        }
        throw new b();
    }

    public static String l(Context context) {
        if (Build.VERSION.SDK_INT >= 26) {
            if (context.checkCallingOrSelfPermission("android.permission.READ_PHONE_STATE") != 0) {
                throw new b();
            }
            return Build.getSerial();
        }
        return Build.SERIAL;
    }

    private static String m(Context context) {
        if (context.checkCallingOrSelfPermission("android.permission.ACCESS_WIFI_STATE") == 0) {
            WifiInfo connectionInfo = ((WifiManager) context.getApplicationContext().getSystemService("wifi")).getConnectionInfo();
            if (connectionInfo == null) {
                return null;
            }
            String macAddress = connectionInfo.getMacAddress();
            return !TextUtils.isEmpty(macAddress) ? macAddress.toUpperCase(Locale.ENGLISH) : macAddress;
        }
        throw new b();
    }
}
