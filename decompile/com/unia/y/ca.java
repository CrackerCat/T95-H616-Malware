package com.unia.y;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class ca {

    /* renamed from: a  reason: collision with root package name */
    private static Method f533a;
    private static Method b;
    private static Method c;
    private static Method d;

    static {
        Method[] declaredMethods;
        try {
            for (Method method : Class.forName("android.os.SystemProperties").getDeclaredMethods()) {
                method.setAccessible(true);
                String name = method.getName();
                if (name.equals("get")) {
                    f533a = method;
                } else if (name.equals("set")) {
                    b = method;
                } else if (name.equals("native_set")) {
                    c = method;
                } else if (name.equals("native_get") && method.getParameterTypes().length == 2) {
                    d = method;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private ca() {
    }

    public static String a(String str, String str2) {
        try {
            return (String) f533a.invoke(null, str, str2);
        } catch (IllegalAccessException e) {
            e.printStackTrace();
            return str2;
        } catch (IllegalArgumentException e2) {
            e2.printStackTrace();
            return str2;
        } catch (InvocationTargetException e3) {
            e3.printStackTrace();
            return str2;
        }
    }

    public static String b(String str, String str2) {
        try {
            return (String) d.invoke(null, str, str2);
        } catch (IllegalAccessException e) {
            e.printStackTrace();
            return str2;
        } catch (IllegalArgumentException e2) {
            e2.printStackTrace();
            return str2;
        } catch (InvocationTargetException e3) {
            e3.printStackTrace();
            return str2;
        }
    }

    public static void c(String str, String str2) {
        try {
            b.invoke(null, str, str2);
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (IllegalArgumentException e2) {
            e2.printStackTrace();
        } catch (InvocationTargetException e3) {
            e3.printStackTrace();
        }
    }

    public static void d(String str, String str2) {
        try {
            c.invoke(null, str, str2);
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (IllegalArgumentException e2) {
            e2.printStackTrace();
        } catch (InvocationTargetException e3) {
            e3.printStackTrace();
        }
    }
}
