package com.unia.y;

import java.util.Arrays;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class aj {

    /* renamed from: a  reason: collision with root package name */
    private ExecutorService f470a = Executors.newFixedThreadPool(50);
    private ae b = new ae();
    private af c = new af();
    private ao d = new ao();

    public static String a(byte[] bArr) {
        StringBuffer stringBuffer = new StringBuffer();
        stringBuffer.append(bArr[0] & 255);
        stringBuffer.append(".");
        stringBuffer.append(bArr[1] & 255);
        stringBuffer.append(".");
        stringBuffer.append(bArr[2] & 255);
        stringBuffer.append(".");
        stringBuffer.append(bArr[3] & 255);
        return stringBuffer.toString();
    }

    public void a(final ah ahVar) {
        this.f470a.submit(new Runnable() { // from class: com.unia.y.aj.1
            @Override // java.lang.Runnable
            public void run() {
                try {
                    byte[] i = ahVar.i();
                    int j = ahVar.j();
                    byte[] m = ahVar.m();
                    au.a("outputIp:" + Arrays.toString(m));
                    String b = ahVar.b();
                    au.a("domain:" + b);
                    int l = ahVar.l();
                    long k = ahVar.k();
                    if (ahVar.f() != 1) {
                        if (ahVar.f() != 2) {
                            return;
                        }
                        au.a("INPUT_UDP");
                        aj.this.d.a(aj.a(i), j, k);
                        return;
                    }
                    au.a("INPUT_TCP");
                    if (ahVar.c() <= 1) {
                        aj.this.b.a(aj.a(i), j, aj.a(m), l, k);
                        return;
                    }
                    au.a("pipeConnectionHandlerV2");
                    aj.this.c.a(aj.a(i), j, b == null ? aj.a(m) : b, l, k);
                } catch (Throwable unused) {
                }
            }
        });
    }
}
