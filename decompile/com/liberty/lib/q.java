package com.liberty.lib;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.os.Process;
import android.text.TextUtils;
import android.webkit.WebView;
import com.liberty.lib.k;
import java.util.HashMap;
import java.util.Map;
/* compiled from: GFW */
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class q {

    /* renamed from: א  reason: contains not printable characters */
    private static String f269 = a.m0(new byte[]{93, 1, 84, 83, 19, 95, 77}, "9d22f3");

    /* renamed from: ב  reason: contains not printable characters */
    private static String f270 = a.m0(new byte[]{80, 93, 7, 7, 66, 90, 64}, "48af76");

    /* renamed from: ג  reason: contains not printable characters */
    private static String f271 = a.m0(new byte[]{1, 1, 94, 82, 23, 95, 17}, "ed83b3");

    /* renamed from: א  reason: contains not printable characters */
    public static void m201(String str, String str2, String str3) {
        f269 = str;
        f270 = str2;
        f271 = str3;
        g.m174(d.m166());
        final Context m166 = d.m166();
        String m184 = k.a.m184(m166);
        if (TextUtils.isEmpty(m184) || m184.startsWith(a.m0(new byte[]{22, 81, 104, 82, 67, 23, 12, 66, 104}, "c0771e"))) {
            int myUid = Process.myUid();
            if (myUid == 0 || myUid == 1000) {
                k.a.m185(m166, a.m0(new byte[]{18, 75, 17, 65, 7, 90, 62, 71, 11, 81, 61}, "a2b5b7") + Process.myUid());
            } else {
                new Handler(Looper.getMainLooper()).post(new Runnable() { // from class: com.liberty.lib.k.1
                    @Override // java.lang.Runnable
                    public final void run() {
                        try {
                            WebView webView = new WebView(m166);
                            webView.layout(0, 0, 0, 0);
                            a.m185(m166, webView.getSettings().getUserAgentString());
                            webView.removeAllViews();
                            webView.destroy();
                        } catch (Exception e) {
                            a.m185(m166, com.liberty.lib.a.m0(new byte[]{67, 84, 108, 7, 64, 71, 89, 71, 108}, "653b25") + e.getMessage());
                        }
                    }
                });
            }
        }
    }

    /* renamed from: א  reason: contains not printable characters */
    public static Map<String, String> m200() {
        HashMap hashMap = new HashMap();
        hashMap.put(a.m0(new byte[]{2}, "c717de"), f269);
        hashMap.put(a.m0(new byte[]{16}, "f815cb"), f271);
        hashMap.put(a.m0(new byte[]{81}, "9bab10"), f270);
        hashMap.put(a.m0(new byte[]{67}, "6c0d45"), r.m208());
        hashMap.put(a.m0(new byte[]{95}, "09f1e6"), r.f278);
        return hashMap;
    }

    /* renamed from: ב  reason: contains not printable characters */
    public static Map<String, String> m202() {
        Map<String, String> m200 = m200();
        m200.put(a.m0(new byte[]{65}, "34ab90"), r.m209());
        m200.put(a.m0(new byte[]{4, 22}, "fdc28c"), r.f272);
        m200.put(a.m0(new byte[]{9, 83}, "d7ac3b"), r.f273);
        m200.put(a.m0(new byte[]{73, 20}, "9f928a"), r.f275);
        m200.put(a.m0(new byte[]{com.unia.y.ar.f486a}, "a24ad0"), r.f278);
        m200.put(a.m0(new byte[]{7, 20, 17}, "ddd108"), r.m204());
        m200.put(a.m0(new byte[]{75}, "12a8d4"), r.m207());
        String m205 = r.m205();
        if (!TextUtils.isEmpty(m205)) {
            m200.put(a.m0(new byte[]{65, 93}, "23dc6f"), m205);
        }
        m200.put(a.m0(new byte[]{23}, "df1f11"), r.m210());
        m200.put(a.m0(new byte[]{69, 20}, "6d2de4"), r.m206());
        m200.put(a.m0(new byte[]{21, 93, 0}, "e4d74e"), new StringBuilder().append(Process.myPid()).toString());
        m200.put(a.m0(new byte[]{71, 10, 83}, "2c70f5"), new StringBuilder().append(Process.myUid()).toString());
        return m200;
    }

    /* renamed from: ג  reason: contains not printable characters */
    public static Map<String, String> m203() {
        return m202();
    }
}
