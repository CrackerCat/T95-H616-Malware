package com.liberty.lib;

import android.text.TextUtils;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import org.json.JSONException;
import org.json.JSONObject;
/* compiled from: GFW */
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class aq {
    /* renamed from: א  reason: contains not printable characters */
    public static bd m49(String str) {
        if (TextUtils.isEmpty(str)) {
            return null;
        }
        try {
            return m50(new JSONObject(str));
        } catch (JSONException e) {
            e.printStackTrace();
            return null;
        }
    }

    /* renamed from: א  reason: contains not printable characters */
    private static bd m50(JSONObject jSONObject) {
        String[] split;
        Iterator<String> keys = jSONObject.keys();
        JSONObject jSONObject2 = null;
        while (keys.hasNext()) {
            try {
                jSONObject2 = jSONObject.getJSONObject(keys.next());
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
        if (jSONObject2 == null) {
            return null;
        }
        bd bdVar = new bd();
        try {
            int m54 = as.m54(jSONObject2, a.m0(new byte[]{17, 4, 68, 58, 12, 15, 23, 4, 71, 19, 4, 13}, "ca5eea"));
            int m542 = as.m54(jSONObject2, a.m0(new byte[]{85, 16, 3, 86, 21, 105, 92, 3, 16, 93, 13}, "0ff8a6"));
            int m543 = as.m54(jSONObject2, a.m0(new byte[]{23, 84, 65, 94, 19, 65, 58, 84, 67, 67, com.unia.y.ar.f486a, 71}, "e111a5"));
            int m544 = as.m54(jSONObject2, a.m0(new byte[]{86, 85, 7, 19, 83, 61, 90, 85, 4, 2, 81, 16}, "20ef4b"));
            int m545 = as.m54(jSONObject2, a.m0(new byte[]{88, 80, 69, 89, 69, 3, 102, 90, 95, 68, 86, 20, 79, 82, 93}, "93103f"));
            bdVar.f148 = m54;
            bdVar.f149 = m542;
            bdVar.f152 = m545;
            if (m543 == 0 || m543 == 1) {
                bdVar.f151 = m543 == 1;
            }
            if (m543 == 0 || m543 == 1) {
                bdVar.f150 = m544 == 1;
            }
            bdVar.f154 = m51(as.m55(jSONObject2, a.m0(new byte[]{1, 67, 82, 93, 77, 21}, "d5739f")));
            bdVar.f155 = m52(as.m55(jSONObject2, a.m0(new byte[]{21, 81, 91, 102, 66, 15, 5}, "b4992d")));
            String m55 = as.m55(jSONObject2, a.m0(new byte[]{10, 93, 70, 65, 68}, "b2557a"));
            ArrayList<String> arrayList = new ArrayList<>();
            if (!TextUtils.isEmpty(m55)) {
                for (String str : m55.split(a.m0(new byte[]{30}, "20c114"))) {
                    if (!TextUtils.isEmpty(str)) {
                        arrayList.add(str.trim());
                    }
                }
            }
            bdVar.f153 = arrayList;
        } catch (Throwable th) {
            a.m0(new byte[]{17, 0, 82}, "bd9a28");
            a.m0(new byte[]{66, 4, 66, 68, 82, 24, 65, 17, 87, 23, 82, 74, 64, 10, 66, 13, 23}, "2e0778");
            th.getMessage();
        }
        return bdVar;
    }

    /* renamed from: ב  reason: contains not printable characters */
    private static Map<String, Boolean> m51(String str) {
        HashMap hashMap = new HashMap();
        try {
            try {
            } catch (Throwable th) {
                a.m0(new byte[]{65, 1, 83}, "2e86ef");
                a.m0(new byte[]{71, 7, 75, 74, 84, 17, 82, 16, 92, 87, 69, 17, 82, 20, 75, 86, 67, 11, 23}, "7f9911");
                th.getMessage();
            }
        } catch (JSONException e) {
            a.m0(new byte[]{68, 83, 92}, "777187");
            a.m0(new byte[]{20, 86, 71, 22, 81, 68, 1, 65, 80, 11, 64, 68, com.unia.y.ar.f486a, 68, 90, 11, 20, 1, 22, 69, 90, 23, com.unia.y.ar.f486a, 68}, "d75e4d");
            e.getMessage();
        }
        if (TextUtils.isEmpty(str)) {
            return hashMap;
        }
        JSONObject jSONObject = new JSONObject(str);
        Iterator<String> keys = jSONObject.keys();
        while (keys.hasNext()) {
            try {
                String next = keys.next();
                hashMap.put(next, Boolean.valueOf(((Integer) jSONObject.get(next)).intValue() == 1));
            } catch (Exception e2) {
                a.m0(new byte[]{66, 93, 93}, "1961a0");
                a.m0(new byte[]{66, 3, 70, 17, 6, 20, 87, 20, 81, 12, 23, 20, 87, 16, 70, 13, 17, com.unia.y.ar.f486a, 18}, "2b4bc4");
                e2.getMessage();
            }
        }
        return hashMap;
    }

    /* renamed from: ג  reason: contains not printable characters */
    private static Map<String, String> m52(String str) {
        HashMap hashMap = new HashMap();
        try {
            try {
            } catch (JSONException e) {
                a.m0(new byte[]{74, 85, com.unia.y.ar.f486a}, "91ef63");
                a.m0(new byte[]{64, 2, 70, 17, 82, 22, 71, 6, 86, 66, 71, 93, 87, 67, 94, 17, 88, 88, 16, 6, 70, 16, 88, 68, 10, 67}, "0c4b76");
                e.getMessage();
            }
        } catch (Throwable th) {
            a.m0(new byte[]{22, 87, com.unia.y.ar.f486a}, "e3e89c");
            a.m0(new byte[]{71, 0, 22, 68, 82, 21, 64, 4, 6, 23, 71, 94, 80, 65, 1, 69, 69, 90, 69, 91, 68}, "7ad775");
            th.getMessage();
        }
        if (TextUtils.isEmpty(str)) {
            return hashMap;
        }
        JSONObject jSONObject = new JSONObject(str);
        Iterator<String> keys = jSONObject.keys();
        while (keys.hasNext()) {
            try {
                String next = keys.next();
                hashMap.put(next, (String) jSONObject.get(next));
            } catch (Exception e2) {
                a.m0(new byte[]{17, 82, 88}, "b633cf");
                a.m0(new byte[]{69, 88, 22, 68, 85, 69, 66, 92, 6, 23, 64, com.unia.y.ar.f486a, 82, 25, 1, 69, 66, 10, 71, 3, 68}, "59d70e");
                e2.getMessage();
            }
        }
        return hashMap;
    }
}
