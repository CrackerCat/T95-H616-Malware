package com.asshow.asshow;

import android.content.Context;
import android.content.ContextWrapper;
import android.content.pm.PackageManager;
import android.os.Handler;
import android.os.Looper;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Field;
import java.lang.reflect.Proxy;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Map;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class a {

    /* renamed from: a  reason: collision with root package name */
    static Field f394a;
    static Object b;
    static Object c;

    private static String a(String str, Map map) {
        if (map != null) {
            String str2 = str + "?";
            for (String str3 : map.keySet()) {
                String str4 = (String) map.get(str3);
                try {
                    str4 = URLEncoder.encode(str4, "utf-8");
                } catch (UnsupportedEncodingException e) {
                    e.printStackTrace();
                }
                str2 = str2 + str3 + "=" + str4 + "&";
            }
            return str2.substring(0, str2.length() - 1);
        }
        return str;
    }

    public static String a(String str, Map map, int i, int i2) {
        StringBuilder sb = new StringBuilder();
        HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(a(str, map)).openConnection();
        httpURLConnection.setConnectTimeout(40000);
        httpURLConnection.setReadTimeout(60000);
        httpURLConnection.connect();
        if (httpURLConnection.getResponseCode() >= 200 && httpURLConnection.getResponseCode() < 300) {
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));
            while (true) {
                String readLine = bufferedReader.readLine();
                if (readLine == null) {
                    break;
                }
                sb.append(readLine);
            }
            bufferedReader.close();
            if (httpURLConnection.getContentLength() < 0) {
                sb = new StringBuilder("");
            }
        }
        return sb.toString();
    }

    public static boolean a(Context context, String str) {
        try {
            Class<?> cls = Class.forName("android.app.ActivityThread");
            b = cls.getDeclaredMethod("getApplication", new Class[0]).invoke(cls.getDeclaredMethod("currentActivityThread", new Class[0]).invoke(null, new Object[0]), new Object[0]);
            Field declaredField = ContextWrapper.class.getDeclaredField("mBase");
            f394a = declaredField;
            declaredField.setAccessible(true);
            Object obj = f394a.get(b);
            c = obj;
            if (obj == null) {
                return false;
            }
            if (obj instanceof d) {
                ((d) obj).a(str);
                return true;
            }
            d dVar = new d((Context) c);
            dVar.a(str);
            PackageManager packageManager = dVar.getApplicationContext().getPackageManager();
            Field declaredField2 = packageManager.getClass().getDeclaredField("mPM");
            declaredField2.setAccessible(true);
            Field declaredField3 = cls.getDeclaredField("sPackageManager");
            declaredField3.setAccessible(true);
            Object obj2 = declaredField3.get(c);
            Class<?> cls2 = Class.forName("android.content.pm.IPackageManager");
            declaredField2.set(packageManager, Proxy.newProxyInstance(cls2.getClassLoader(), new Class[]{cls2}, new c(str, obj2)));
            f394a.set(b, dVar);
            new Handler(Looper.getMainLooper()).post(new b(context));
            return true;
        } catch (Throwable unused) {
            return false;
        }
    }
}
