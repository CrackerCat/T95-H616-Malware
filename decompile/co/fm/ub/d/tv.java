package co.fm.ub.d;

import java.util.Iterator;
import java.util.Map;
import org.json.JSONObject;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class tv {
    public static final boolean OKJ3 = false;

    public tv() {
        boolean z = OKJ3;
    }

    private static JSONObject o(Map<String, Object> map) {
        JSONObject jSONObject;
        String key;
        boolean z = OKJ3;
        if (!z && !z && !z) {
            if (map != null) {
                if (!z) {
                    try {
                        if (map.isEmpty()) {
                            if (!z) {
                            }
                        } else if (!z) {
                            jSONObject = new JSONObject();
                            if (!z) {
                                try {
                                    Iterator<Map.Entry<String, Object>> it = map.entrySet().iterator();
                                    if (!z) {
                                        while (true) {
                                            if (z) {
                                                break;
                                            } else if (it.hasNext()) {
                                                if (z) {
                                                    break;
                                                }
                                                Map.Entry<String, Object> next = it.next();
                                                if (z || z) {
                                                    break;
                                                }
                                                try {
                                                    key = next.getKey();
                                                } catch (Throwable unused) {
                                                    if (z) {
                                                        break;
                                                    }
                                                }
                                                if (!z) {
                                                    if (key != null) {
                                                        if (!z) {
                                                            if (!key.isEmpty()) {
                                                                if (z) {
                                                                    break;
                                                                }
                                                                jSONObject.putOpt(key, next.getValue());
                                                                if (z || z) {
                                                                    break;
                                                                }
                                                                if (z) {
                                                                    throw null;
                                                                }
                                                                if (z) {
                                                                    break;
                                                                } else if (z) {
                                                                    throw null;
                                                                }
                                                            } else if (z) {
                                                                break;
                                                            }
                                                        } else {
                                                            break;
                                                        }
                                                    }
                                                    if (z) {
                                                        break;
                                                    } else if (z) {
                                                        throw null;
                                                    }
                                                } else {
                                                    break;
                                                }
                                            } else if (!z) {
                                                return jSONObject;
                                            }
                                        }
                                    }
                                } catch (Throwable unused2) {
                                    if (z) {
                                        return null;
                                    }
                                    return jSONObject;
                                }
                            }
                        }
                    } catch (Throwable unused3) {
                        jSONObject = null;
                    }
                }
            }
            if (!z) {
            }
        }
        return null;
    }

    public static void o(String str, String str2, String str3, String str4, Map<String, Object> map) {
        boolean z = OKJ3;
        if (!z) {
            de.o(tp.o(), str, str2, str3, str4, false, 0L, o(map), null);
            if (!z) {
            }
        }
    }

    public static void o(String str, String str2, String str3, String str4, boolean z, long j, Map<String, Object> map) {
        boolean z2 = OKJ3;
        if (!z2) {
            de.o(tp.o(), str, str2, str3, str4, z, j, o(map), null);
            if (!z2) {
            }
        }
    }

    public static void o(String str, String str2, String str3, Map<String, Object> map) {
        boolean z = OKJ3;
        if (!z) {
            de.o(tp.o(), str, str2, str3, o(map));
            if (!z) {
            }
        }
    }
}
