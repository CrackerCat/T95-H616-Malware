package co.fm.ub.d;

import android.text.TextUtils;
import co.fm.ub.d.l;
import org.json.JSONArray;
import org.json.JSONObject;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class tx {
    public static final boolean Ozmv = false;

    public tx() {
        boolean z = Ozmv;
    }

    public static /* bridge */ /* synthetic */ String ZsJa(int i) {
        return new String[]{"\uf261", "ഺഹ\u0d3c\u0d78പഷഷബ", "᯾᯽\u1bf8ᮼᯬ᯽ᯨ\u1bf4", "㵺", "\uf078\uf07b\uf07e\uf03a\uf074\uf07b\uf077\uf07f\uf069", "̛̛̞͈͈͒͵ʹ̛̛͈͔͕͔͙ͯ͑͑͘͞͏"}[i];
    }

    private static float o(Object obj, float f) {
        boolean z = Ozmv;
        if (z || z) {
            return 0.0f;
        }
        if (obj == null) {
            if (z) {
                return 0.0f;
            }
            return f;
        } else if (z) {
            return 0.0f;
        } else {
            try {
                if (obj instanceof Number) {
                    if (z) {
                        return 0.0f;
                    }
                    return ((Number) obj).floatValue();
                } else if (z) {
                    return 0.0f;
                } else {
                    if (obj instanceof String) {
                        if (z) {
                            return 0.0f;
                        }
                        return Float.parseFloat((String) obj);
                    } else if (z) {
                        return 0.0f;
                    } else {
                        return f;
                    }
                }
            } catch (Throwable unused) {
                if (z) {
                    return 0.0f;
                }
                return f;
            }
        }
    }

    public static float o(JSONObject jSONObject, String str, float f) {
        if (!Ozmv) {
            return o(o(jSONObject, str, Object.class, null), f);
        }
        return 0.0f;
    }

    private static int o(Object obj, int i) {
        boolean z = Ozmv;
        if (z || z) {
            return 0;
        }
        if (obj == null) {
            if (z) {
                return 0;
            }
            return i;
        } else if (z) {
            return 0;
        } else {
            try {
                if (obj instanceof Number) {
                    if (z) {
                        return 0;
                    }
                    return ((Number) obj).intValue();
                } else if (z) {
                    return 0;
                } else {
                    if (obj instanceof String) {
                        if (z) {
                            return 0;
                        }
                        return Integer.parseInt((String) obj);
                    } else if (z) {
                        return 0;
                    } else {
                        return i;
                    }
                }
            } catch (Throwable unused) {
                if (z) {
                    return 0;
                }
                return i;
            }
        }
    }

    public static int o(JSONObject jSONObject, String str, int i) {
        if (!Ozmv) {
            return o(o(jSONObject, str, Object.class, null), i);
        }
        return 0;
    }

    private static long o(Object obj, long j) {
        boolean z = Ozmv;
        if (z || z) {
            return 0L;
        }
        if (obj == null) {
            if (z) {
                return 0L;
            }
            return j;
        } else if (z) {
            return 0L;
        } else {
            try {
                if (obj instanceof Number) {
                    if (z) {
                        return 0L;
                    }
                    return ((Number) obj).longValue();
                } else if (z) {
                    return 0L;
                } else {
                    if (obj instanceof String) {
                        if (z) {
                            return 0L;
                        }
                        return Long.parseLong((String) obj);
                    } else if (z) {
                        return 0L;
                    } else {
                        return j;
                    }
                }
            } catch (Throwable unused) {
                if (z) {
                    return 0L;
                }
                return j;
            }
        }
    }

    public static long o(JSONObject jSONObject, String str, long j) {
        if (!Ozmv) {
            return o(o(jSONObject, str, Object.class, null), j);
        }
        return 0L;
    }

    /* JADX WARN: Code restructure failed: missing block: B:100:0x00b0, code lost:
        if (r0 != false) goto L119;
     */
    /* JADX WARN: Code restructure failed: missing block: B:101:0x00b2, code lost:
        if (r0 != false) goto L119;
     */
    /* JADX WARN: Code restructure failed: missing block: B:102:0x00b4, code lost:
        r3 = null;
     */
    /* JADX WARN: Code restructure failed: missing block: B:103:0x00b5, code lost:
        if (r0 != false) goto L119;
     */
    /* JADX WARN: Code restructure failed: missing block: B:105:0x00bb, code lost:
        if (r8.isInstance(r3) == false) goto L108;
     */
    /* JADX WARN: Code restructure failed: missing block: B:106:0x00bd, code lost:
        if (r0 != false) goto L119;
     */
    /* JADX WARN: Code restructure failed: missing block: B:107:0x00bf, code lost:
        return r3;
     */
    /* JADX WARN: Code restructure failed: missing block: B:108:0x00c0, code lost:
        if (r0 != false) goto L119;
     */
    /* JADX WARN: Code restructure failed: missing block: B:109:0x00c2, code lost:
        return r9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:89:0x00a0, code lost:
        if (r0 != false) goto L119;
     */
    /* JADX WARN: Code restructure failed: missing block: B:90:0x00a2, code lost:
        return r9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:97:0x00aa, code lost:
        if (r0 != false) goto L119;
     */
    /* JADX WARN: Code restructure failed: missing block: B:99:0x00ae, code lost:
        if (r3 != org.json.JSONObject.NULL) goto L103;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static <T> T o(java.lang.Object r6, java.lang.String r7, java.lang.Class<T> r8, T r9) {
        /*
            Method dump skipped, instructions count: 200
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: co.fm.ub.d.tx.o(java.lang.Object, java.lang.String, java.lang.Class, java.lang.Object):java.lang.Object");
    }

    public static <T> T o(JSONObject jSONObject, String str, int i, Class<T> cls, T t) {
        boolean z = Ozmv;
        if (!z && !z) {
            if (jSONObject == null) {
                if (!z) {
                    return t;
                }
            } else if (!z) {
                if (i < 0) {
                    if (!z) {
                        return t;
                    }
                } else if (!z) {
                    try {
                        JSONArray jSONArray = (JSONArray) o(jSONObject, str, JSONArray.class, null);
                        if (!z) {
                            if (jSONArray == null) {
                                if (!z) {
                                    return t;
                                }
                            } else if (!z) {
                                if (i >= jSONArray.length()) {
                                    if (!z) {
                                        return t;
                                    }
                                } else if (!z) {
                                    T t2 = (T) jSONArray.opt(i);
                                    if (!z) {
                                        if (cls.isInstance(t2)) {
                                            if (!z) {
                                                return t2;
                                            }
                                        } else if (!z) {
                                            return t;
                                        }
                                    }
                                }
                            }
                        }
                    } catch (Throwable unused) {
                        if (!z) {
                            return t;
                        }
                    }
                }
            }
        }
        return null;
    }

    private static String o(Object obj) {
        boolean z = Ozmv;
        if (!z && !z) {
            if (obj == null) {
                if (!z) {
                    return null;
                }
            } else if (!z) {
                try {
                    if (obj instanceof String) {
                        if (!z) {
                            return (String) obj;
                        }
                    } else if (!z) {
                        if (!(obj instanceof Number)) {
                            if (!z) {
                                if (obj instanceof Boolean) {
                                    if (!z) {
                                    }
                                } else if (!z) {
                                    return null;
                                }
                            }
                        }
                        if (!z) {
                            return obj.toString();
                        }
                    }
                } catch (Throwable unused) {
                    if (!z) {
                    }
                }
            }
        }
        return null;
    }

    public static String o(JSONObject jSONObject, String str) {
        if (!Ozmv) {
            return o(jSONObject, str, (String) null);
        }
        return null;
    }

    public static String o(JSONObject jSONObject, String str, String str2) {
        boolean z = Ozmv;
        if (!z) {
            String o = o(o(jSONObject, str, Object.class, null));
            if (!z) {
                if (o == null) {
                    return str2;
                }
                if (!z) {
                    if (z) {
                        throw null;
                    }
                    return o;
                }
            }
        }
        return null;
    }

    public static void o(JSONObject jSONObject, String str, Object obj) {
        boolean z = Ozmv;
        if (z || z) {
            return;
        }
        try {
        } catch (Throwable unused) {
            if (z) {
                return;
            }
        }
        if (jSONObject == null) {
            if (!z) {
                throw new dt(l.AnonymousClass1.KL67(ZsJa(1), null, 37673));
            }
        } else if (z) {
        } else {
            if (TextUtils.isEmpty(str)) {
                if (!z) {
                    throw new dt(l.AnonymousClass1.KL67(ZsJa(2), null, 34285));
                }
            } else if (z) {
            } else {
                String[] split = str.split(l.AnonymousClass1.KL67(ZsJa(3), null, 41764));
                if (z) {
                    return;
                }
                if (split.length <= 0) {
                    if (!z) {
                        throw new dt(l.AnonymousClass1.KL67(ZsJa(4), null, 28267));
                    }
                } else if (z || z || z) {
                } else {
                    int i = 0;
                    while (!z) {
                        if (i >= split.length - 1) {
                            if (z) {
                                return;
                            }
                            jSONObject.putOpt(split[split.length - 1], obj);
                            if (z || z) {
                                return;
                            }
                            if (z) {
                                throw null;
                            }
                            if (!z) {
                            }
                            return;
                        } else if (z) {
                            return;
                        } else {
                            String str2 = split[i];
                            if (z) {
                                return;
                            }
                            Object opt = jSONObject.opt(str2);
                            if (z) {
                                return;
                            }
                            if (opt == null) {
                                if (z) {
                                    return;
                                }
                                opt = new JSONObject();
                                if (z) {
                                    return;
                                }
                                jSONObject.putOpt(str2, opt);
                                if (z) {
                                    return;
                                }
                                if (z) {
                                    throw null;
                                }
                            } else if (z) {
                                return;
                            } else {
                                if (!(opt instanceof JSONObject)) {
                                    if (!z) {
                                        throw new dt(String.format(l.AnonymousClass1.KL67(ZsJa(5), null, 40266), str2));
                                    }
                                    return;
                                }
                            }
                            if (z) {
                                return;
                            }
                            jSONObject = opt;
                            if (z) {
                                return;
                            }
                            i++;
                            if (z) {
                                return;
                            }
                            if (z) {
                                throw null;
                            }
                        }
                    }
                }
            }
        }
    }

    public static void o(JSONObject jSONObject, JSONObject jSONObject2) {
        JSONArray names;
        boolean z = Ozmv;
        if (z || z) {
            return;
        }
        if (jSONObject2 != null) {
            if (z) {
                return;
            }
            if (jSONObject != null) {
                if (z) {
                    return;
                }
                try {
                    names = jSONObject.names();
                } catch (Throwable unused) {
                    if (z) {
                        return;
                    }
                }
                if (z) {
                    return;
                }
                int length = names.length();
                if (z) {
                    return;
                }
                int i = 0;
                if (z) {
                    return;
                }
                while (!z) {
                    if (i >= length) {
                        if (z) {
                            return;
                        }
                        if (z) {
                            throw null;
                        }
                        if (z) {
                            return;
                        }
                        return;
                    } else if (z) {
                        return;
                    } else {
                        String optString = names.optString(i);
                        if (z) {
                            return;
                        }
                        if (optString != null) {
                            if (z) {
                                return;
                            }
                            if (optString.isEmpty()) {
                                if (z) {
                                    return;
                                }
                                if (z) {
                                    throw null;
                                }
                            } else if (z) {
                                return;
                            } else {
                                jSONObject2.putOpt(optString, jSONObject.opt(optString));
                                if (z) {
                                    return;
                                }
                            }
                        }
                        if (z) {
                            return;
                        }
                        i++;
                        if (z) {
                            return;
                        }
                        if (z) {
                            throw null;
                        }
                    }
                }
                return;
            } else if (z) {
                return;
            }
        }
        if (!z) {
        }
    }
}
