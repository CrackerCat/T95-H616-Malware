package com.android.soplugin.net;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Proxy;
import android.os.Build;
import android.text.TextUtils;
import com.android.soplugin.util.PLog;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.MalformedURLException;
import java.net.Proxy;
import java.net.URL;
import java.net.URLConnection;
import javax.net.ssl.HttpsURLConnection;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class NetworkConnecter {
    private static final String Content_Type = "text/plain; charset=utf-8";
    private static final String Http_head = "http://";
    private static final String Https_head = "https://";
    private static final int TimeOut_Millis = 20000;

    public static byte[] readContentByGet(Context context, String str) {
        try {
            PLog.i("readContentByGet url = " + str);
            HttpURLConnection httpURLConnection = getHttpURLConnection(context, formatUrl(str));
            httpURLConnection.setConnectTimeout(TimeOut_Millis);
            httpURLConnection.setReadTimeout(TimeOut_Millis);
            if (httpURLConnection.getResponseCode() != 200) {
                return null;
            }
            byte[] readData = readData(httpURLConnection.getInputStream());
            httpURLConnection.disconnect();
            PLog.i("readContentFromGet result = " + readData);
            return readData;
        } catch (Exception unused) {
            return null;
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:23:0x00de, code lost:
        if (r4 == null) goto L24;
     */
    /* JADX WARN: Code restructure failed: missing block: B:24:0x00e1, code lost:
        return null;
     */
    /* JADX WARN: Code restructure failed: missing block: B:26:0x00c7, code lost:
        r4.flush();
        r4.close();
     */
    /* JADX WARN: Code restructure failed: missing block: B:37:0x00c5, code lost:
        if (r4 != null) goto L25;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static byte[] readContentByPost(android.content.Context r3, java.lang.String r4, byte[] r5) {
        /*
            if (r5 != 0) goto Lc
            java.lang.String r5 = "readContentByPost data = null, changeto readContentByGet"
            com.android.soplugin.util.PLog.w(r5)
            byte[] r3 = readContentByGet(r3, r4)
            return r3
        Lc:
            r0 = 0
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            r1.<init>()     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r2 = "readContentByPost url = "
            java.lang.StringBuilder r1 = r1.append(r2)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.StringBuilder r1 = r1.append(r4)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r1 = r1.toString()     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            com.android.soplugin.util.PLog.i(r1)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            r1.<init>()     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r2 = "readContentByPost data len = "
            java.lang.StringBuilder r1 = r1.append(r2)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            int r2 = r5.length     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.StringBuilder r1 = r1.append(r2)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r1 = r1.toString()     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            com.android.soplugin.util.PLog.i(r1)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r4 = formatUrl(r4)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.net.HttpURLConnection r3 = getHttpURLConnection(r3, r4)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            r4 = 20000(0x4e20, float:2.8026E-41)
            r3.setConnectTimeout(r4)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            r3.setReadTimeout(r4)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            r4 = 1
            r3.setDoOutput(r4)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            r4 = 0
            r3.setUseCaches(r4)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r4 = "POST"
            r3.setRequestMethod(r4)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r4 = "Connection"
            java.lang.String r1 = "Keep-Alive"
            r3.setRequestProperty(r4, r1)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r4 = "Charset"
            java.lang.String r1 = "UTF-8"
            r3.setRequestProperty(r4, r1)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            if (r5 == 0) goto L80
            java.lang.String r4 = "Content-Length"
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            r1.<init>()     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            int r2 = r5.length     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.StringBuilder r1 = r1.append(r2)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r2 = ""
            java.lang.StringBuilder r1 = r1.append(r2)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.lang.String r1 = r1.toString()     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            r3.setRequestProperty(r4, r1)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
        L80:
            java.lang.String r4 = "Content-Type"
            java.lang.String r1 = "text/plain; charset=utf-8"
            r3.setRequestProperty(r4, r1)     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            java.io.OutputStream r4 = r3.getOutputStream()     // Catch: java.lang.Throwable -> Ld3 java.lang.Exception -> Ldd
            if (r5 == 0) goto L96
            r4.write(r5)     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            r4.flush()     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            r4.close()     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
        L96:
            int r5 = r3.getResponseCode()     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            r1 = 200(0xc8, float:2.8E-43)
            if (r5 != r1) goto Lc5
            java.io.InputStream r3 = r3.getInputStream()     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            byte[] r3 = readData(r3)     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            r5.<init>()     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            java.lang.String r1 = "readContentFromPost result = "
            java.lang.StringBuilder r5 = r5.append(r1)     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            java.lang.StringBuilder r5 = r5.append(r3)     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            java.lang.String r5 = r5.toString()     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            com.android.soplugin.util.PLog.i(r5)     // Catch: java.lang.Throwable -> Lce java.lang.Exception -> Ld1
            if (r4 == 0) goto Lc4
            r4.flush()     // Catch: java.lang.Exception -> Lc4
            r4.close()     // Catch: java.lang.Exception -> Lc4
        Lc4:
            return r3
        Lc5:
            if (r4 == 0) goto Le1
        Lc7:
            r4.flush()     // Catch: java.lang.Exception -> Le1
            r4.close()     // Catch: java.lang.Exception -> Le1
            goto Le1
        Lce:
            r3 = move-exception
            r0 = r4
            goto Ld4
        Ld1:
            goto Lde
        Ld3:
            r3 = move-exception
        Ld4:
            if (r0 == 0) goto Ldc
            r0.flush()     // Catch: java.lang.Exception -> Ldc
            r0.close()     // Catch: java.lang.Exception -> Ldc
        Ldc:
            throw r3
        Ldd:
            r4 = r0
        Lde:
            if (r4 == 0) goto Le1
            goto Lc7
        Le1:
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: com.android.soplugin.net.NetworkConnecter.readContentByPost(android.content.Context, java.lang.String, byte[]):byte[]");
    }

    /* JADX WARN: Code restructure failed: missing block: B:24:0x00df, code lost:
        if (r5 == null) goto L25;
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x00e2, code lost:
        return null;
     */
    /* JADX WARN: Code restructure failed: missing block: B:27:0x00c8, code lost:
        r5.flush();
        r5.close();
     */
    /* JADX WARN: Code restructure failed: missing block: B:38:0x00c6, code lost:
        if (r5 != null) goto L26;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static byte[] readContentByPost(android.content.Context r4, java.lang.String r5, java.lang.String r6) {
        /*
            java.lang.String r0 = "UTF-8"
            if (r6 != 0) goto Le
            java.lang.String r6 = "readContentByPost data = null, changeto readContentByGet"
            com.android.soplugin.util.PLog.w(r6)
            byte[] r4 = readContentByGet(r4, r5)
            return r4
        Le:
            r1 = 0
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            r2.<init>()     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r3 = "readContentByPost url = "
            java.lang.StringBuilder r2 = r2.append(r3)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.StringBuilder r2 = r2.append(r5)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r2 = r2.toString()     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            com.android.soplugin.util.PLog.i(r2)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            r2.<init>()     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r3 = "readContentByPost data len = "
            java.lang.StringBuilder r2 = r2.append(r3)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            int r3 = r6.length()     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.StringBuilder r2 = r2.append(r3)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r2 = r2.toString()     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            com.android.soplugin.util.PLog.i(r2)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            byte[] r6 = r6.getBytes(r0)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r5 = formatUrl(r5)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.net.HttpURLConnection r4 = getHttpURLConnection(r4, r5)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            r5 = 20000(0x4e20, float:2.8026E-41)
            r4.setConnectTimeout(r5)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            r4.setReadTimeout(r5)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            r5 = 1
            r4.setDoOutput(r5)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            r5 = 0
            r4.setUseCaches(r5)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r5 = "POST"
            r4.setRequestMethod(r5)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r5 = "Connection"
            java.lang.String r2 = "Keep-Alive"
            r4.setRequestProperty(r5, r2)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r5 = "Charset"
            r4.setRequestProperty(r5, r0)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            if (r6 == 0) goto L87
            java.lang.String r5 = "Content-Length"
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            r0.<init>()     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            int r2 = r6.length     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.StringBuilder r0 = r0.append(r2)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r2 = ""
            java.lang.StringBuilder r0 = r0.append(r2)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.lang.String r0 = r0.toString()     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            r4.setRequestProperty(r5, r0)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
        L87:
            java.lang.String r5 = "Content-Type"
            java.lang.String r0 = "text/plain; charset=utf-8"
            r4.setRequestProperty(r5, r0)     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            java.io.OutputStream r5 = r4.getOutputStream()     // Catch: java.lang.Throwable -> Ld4 java.lang.Exception -> Lde
            if (r6 == 0) goto L97
            r5.write(r6)     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
        L97:
            int r6 = r4.getResponseCode()     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            r0 = 200(0xc8, float:2.8E-43)
            if (r6 != r0) goto Lc6
            java.io.InputStream r4 = r4.getInputStream()     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            byte[] r4 = readData(r4)     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            java.lang.StringBuilder r6 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            r6.<init>()     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            java.lang.String r0 = "readContentFromPost result = "
            java.lang.StringBuilder r6 = r6.append(r0)     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            java.lang.StringBuilder r6 = r6.append(r4)     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            java.lang.String r6 = r6.toString()     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            com.android.soplugin.util.PLog.i(r6)     // Catch: java.lang.Throwable -> Lcf java.lang.Exception -> Ld2
            if (r5 == 0) goto Lc5
            r5.flush()     // Catch: java.lang.Exception -> Lc5
            r5.close()     // Catch: java.lang.Exception -> Lc5
        Lc5:
            return r4
        Lc6:
            if (r5 == 0) goto Le2
        Lc8:
            r5.flush()     // Catch: java.lang.Exception -> Le2
            r5.close()     // Catch: java.lang.Exception -> Le2
            goto Le2
        Lcf:
            r4 = move-exception
            r1 = r5
            goto Ld5
        Ld2:
            goto Ldf
        Ld4:
            r4 = move-exception
        Ld5:
            if (r1 == 0) goto Ldd
            r1.flush()     // Catch: java.lang.Exception -> Ldd
            r1.close()     // Catch: java.lang.Exception -> Ldd
        Ldd:
            throw r4
        Lde:
            r5 = r1
        Ldf:
            if (r5 == 0) goto Le2
            goto Lc8
        Le2:
            return r1
        */
        throw new UnsupportedOperationException("Method not decompiled: com.android.soplugin.net.NetworkConnecter.readContentByPost(android.content.Context, java.lang.String, java.lang.String):byte[]");
    }

    private static byte[] readData(InputStream inputStream) throws Exception {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        byte[] bArr = new byte[2048];
        while (true) {
            int read = inputStream.read(bArr);
            if (read != -1) {
                byteArrayOutputStream.write(bArr, 0, read);
                PLog.e("The readData buffer len is := " + read);
            } else {
                byte[] byteArray = byteArrayOutputStream.toByteArray();
                inputStream.close();
                byteArrayOutputStream.flush();
                byteArrayOutputStream.close();
                return byteArray;
            }
        }
    }

    private static String formatUrl(String str) {
        return (str.startsWith(Http_head) || str.startsWith(Https_head)) ? str : Http_head + str;
    }

    public static HttpURLConnection getHttpURLConnection(Context context, String str) {
        URL url;
        URLConnection uRLConnection = null;
        try {
            url = new URL(str);
        } catch (MalformedURLException e) {
            PLog.e("getHttpURLConnection err : " + e);
            url = null;
        }
        if (url == null) {
            return null;
        }
        if (Build.VERSION.SDK_INT < 19) {
            NetworkInfo activeNetworkInfo = ((ConnectivityManager) context.getSystemService("connectivity")).getActiveNetworkInfo();
            if ((activeNetworkInfo != null ? activeNetworkInfo.getType() : -1) == 0) {
                try {
                    String defaultHost = Proxy.getDefaultHost();
                    if (!TextUtils.isEmpty(defaultHost)) {
                        int defaultPort = Proxy.getDefaultPort();
                        if (defaultPort == -1) {
                            defaultPort = 80;
                        }
                        PLog.e("设置代理host = " + defaultHost + " , prot = " + defaultPort);
                        uRLConnection = url.openConnection(new java.net.Proxy(Proxy.Type.HTTP, new InetSocketAddress(defaultHost, defaultPort)));
                    }
                } catch (Exception unused) {
                }
            }
        }
        if (uRLConnection == null && url != null) {
            try {
                PLog.i("普通openConnection");
                uRLConnection = url.openConnection();
            } catch (IOException unused2) {
            }
        }
        if (uRLConnection != null && str.startsWith(Https_head)) {
            ((HttpsURLConnection) uRLConnection).setSSLSocketFactory(HttpsUtil.getInstance().getSslSocketFactory());
        }
        return (HttpURLConnection) uRLConnection;
    }
}
