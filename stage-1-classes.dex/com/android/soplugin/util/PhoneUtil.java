package com.android.soplugin.util;

import android.app.ActivityThread;
import android.app.Application;
import android.content.Context;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.provider.Settings;
import android.telephony.TelephonyManager;
import android.view.Display;
import android.view.WindowManager;
import android.webkit.WebView;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class PhoneUtil {
    public static Context getContext() {
        if (ActivityThread.currentActivityThread() != null) {
            Application application = ActivityThread.currentActivityThread().getApplication();
            if (!(application instanceof Application)) {
                try {
                    return application.getApplicationContext();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            return application;
        }
        return ActivityThread.systemMain().getSystemContext();
    }

    public static String getAndroidId() {
        return Settings.Secure.getString(getContext().getContentResolver(), "android_id");
    }

    public static Map<String, String> handGetWifiInfo() {
        Context context = getContext();
        HashMap hashMap = new HashMap();
        WifiManager wifiManager = (WifiManager) context.getSystemService("wifi");
        WifiInfo connectionInfo = wifiManager.getConnectionInfo();
        hashMap.put("wifistatus", String.valueOf(wifiManager.isWifiEnabled()));
        hashMap.put("ip", String.valueOf(intToIp(connectionInfo.getIpAddress())));
        hashMap.put("speed", String.valueOf(connectionInfo.getLinkSpeed()));
        hashMap.put("mac", connectionInfo.getMacAddress());
        return hashMap;
    }

    public static String intToIp(int i) {
        return (i & 255) + "." + ((i >> 8) & 255) + "." + ((i >> 16) & 255) + "." + ((i >> 24) & 255);
    }

    public static String getRandomUUID() {
        return UUID.randomUUID().toString();
    }

    public static String getPackageName() {
        return getContext().getPackageName();
    }

    public static String getMeasureSpec() {
        Display defaultDisplay = ((WindowManager) getContext().getSystemService("window")).getDefaultDisplay();
        int width = defaultDisplay.getWidth();
        return width + "x" + defaultDisplay.getHeight();
    }

    public static String getUserAgent() {
        try {
            return new WebView(getContext()).getSettings().getUserAgentString();
        } catch (Exception unused) {
            return "Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Mobile Safari/537.36";
        }
    }

    public static String getPlmn() {
        String simOperator = ((TelephonyManager) getContext().getSystemService("phone")).getSimOperator();
        if (simOperator == null || simOperator.length() <= 3) {
            return "";
        }
        String substring = simOperator.substring(0, 3);
        return substring + simOperator.substring(3, simOperator.length());
    }

    public static String getDateByDay() {
        String format = new SimpleDateFormat("yyyy-MM-dd").format(Long.valueOf(new Date().getTime()));
        PLog.i("The date is := " + format);
        return format;
    }

    public static String handSpRecord(Context context, String str, String str2) {
        String str3 = str2 + getDateByDay();
        String string = DataPreference.getString(context, str, str2 + "1970-1-1");
        if (!str3.equals(string)) {
            DataPreference.putString(context, str, str3);
            DataPreference.removeKey(context, string);
        }
        return str3;
    }

    public static String handSpLoopIndex(Context context, String str, String str2) {
        String str3 = str2 + getDateByDay();
        String string = DataPreference.getString(context, str, str2 + "1970-1-1");
        if (!str3.equals(string)) {
            DataPreference.putString(context, str, str3);
            DataPreference.removeKey(context, string);
        }
        return str3;
    }
}
