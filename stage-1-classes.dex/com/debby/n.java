package com.debby;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.net.SocketTimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class n {

    /* renamed from: a  reason: collision with root package name */
    public static final Logger f437a = Logger.getLogger(n.class.getName());

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class a implements z {

        /* renamed from: a  reason: collision with root package name */
        public final /* synthetic */ c0 f438a;
        public final /* synthetic */ OutputStream b;

        public a(c0 c0Var, OutputStream outputStream) {
            this.f438a = c0Var;
            this.b = outputStream;
        }

        @Override // com.debby.z
        public void a(com.debby.b bVar, long j) {
            d0.a(bVar.b, 0L, j);
            while (j > 0) {
                this.f438a.c();
                w wVar = bVar.f411a;
                int min = (int) Math.min(j, wVar.c - wVar.b);
                this.b.write(wVar.f454a, wVar.b, min);
                int i = wVar.b + min;
                wVar.b = i;
                long j2 = min;
                j -= j2;
                bVar.b -= j2;
                if (i == wVar.c) {
                    bVar.f411a = wVar.b();
                    x.a(wVar);
                }
            }
        }

        @Override // com.debby.z, java.io.Closeable, java.lang.AutoCloseable
        public void close() {
            this.b.close();
        }

        @Override // com.debby.z, java.io.Flushable
        public void flush() {
            this.b.flush();
        }

        public String toString() {
            return "sink(" + this.b + ")";
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class b implements a0 {

        /* renamed from: a  reason: collision with root package name */
        public final /* synthetic */ c0 f439a;
        public final /* synthetic */ InputStream b;

        public b(c0 c0Var, InputStream inputStream) {
            this.f439a = c0Var;
            this.b = inputStream;
        }

        @Override // com.debby.a0
        public long b(com.debby.b bVar, long j) {
            int i = (j > 0L ? 1 : (j == 0L ? 0 : -1));
            if (i >= 0) {
                if (i == 0) {
                    return 0L;
                }
                try {
                    this.f439a.c();
                    w b = bVar.b(1);
                    int read = this.b.read(b.f454a, b.c, (int) Math.min(j, 8192 - b.c));
                    if (read == -1) {
                        return -1L;
                    }
                    b.c += read;
                    long j2 = read;
                    bVar.b += j2;
                    return j2;
                } catch (AssertionError e) {
                    if (!n.a(e)) {
                        throw e;
                    }
                    throw new IOException(e);
                }
            }
            throw new IllegalArgumentException("byteCount < 0: " + j);
        }

        @Override // com.debby.a0, java.io.Closeable, java.lang.AutoCloseable
        public void close() {
            this.b.close();
        }

        public String toString() {
            return "source(" + this.b + ")";
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class c extends com.debby.a {
        public final /* synthetic */ Socket j;

        public c(Socket socket) {
            this.j = socket;
        }

        @Override // com.debby.a
        public IOException b(IOException iOException) {
            SocketTimeoutException socketTimeoutException = new SocketTimeoutException("timeout");
            if (iOException != null) {
                socketTimeoutException.initCause(iOException);
            }
            return socketTimeoutException;
        }

        /* JADX WARN: Multi-variable type inference failed */
        @Override // com.debby.a
        public void h() {
            Level level;
            StringBuilder sb;
            Logger logger;
            Exception exc;
            try {
                this.j.close();
            } catch (AssertionError e) {
                if (!n.a(e)) {
                    throw e;
                }
                Logger logger2 = n.f437a;
                level = Level.WARNING;
                sb = new StringBuilder();
                exc = e;
                logger = logger2;
                logger.log(level, sb.append("Failed to close timed out socket ").append(this.j).toString(), (Throwable) exc);
            } catch (Exception e2) {
                Logger logger3 = n.f437a;
                level = Level.WARNING;
                sb = new StringBuilder();
                exc = e2;
                logger = logger3;
                logger.log(level, sb.append("Failed to close timed out socket ").append(this.j).toString(), (Throwable) exc);
            }
        }
    }

    public static a0 a(InputStream inputStream, c0 c0Var) {
        if (inputStream != null) {
            if (c0Var == null) {
                throw new IllegalArgumentException("timeout == null");
            }
            return new b(c0Var, inputStream);
        }
        throw new IllegalArgumentException("in == null");
    }

    public static com.debby.c a(z zVar) {
        return new q(zVar);
    }

    public static d a(a0 a0Var) {
        return new r(a0Var);
    }

    public static z a(OutputStream outputStream, c0 c0Var) {
        if (outputStream != null) {
            if (c0Var == null) {
                throw new IllegalArgumentException("timeout == null");
            }
            return new a(c0Var, outputStream);
        }
        throw new IllegalArgumentException("out == null");
    }

    public static z a(Socket socket) {
        if (socket != null) {
            if (socket.getOutputStream() == null) {
                throw new IOException("socket's output stream == null");
            }
            com.debby.a c2 = c(socket);
            return c2.a(a(socket.getOutputStream(), c2));
        }
        throw new IllegalArgumentException("socket == null");
    }

    public static boolean a(AssertionError assertionError) {
        return (assertionError.getCause() == null || assertionError.getMessage() == null || !assertionError.getMessage().contains("getsockname failed")) ? false : true;
    }

    public static a0 b(Socket socket) {
        if (socket != null) {
            if (socket.getInputStream() == null) {
                throw new IOException("socket's input stream == null");
            }
            com.debby.a c2 = c(socket);
            return c2.a(a(socket.getInputStream(), c2));
        }
        throw new IllegalArgumentException("socket == null");
    }

    public static com.debby.a c(Socket socket) {
        return new c(socket);
    }
}
