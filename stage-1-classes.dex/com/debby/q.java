package com.debby;

import java.nio.ByteBuffer;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class q implements c {

    /* renamed from: a  reason: collision with root package name */
    public final b f448a = new b();
    public final z b;
    public boolean c;

    public q(z zVar) {
        if (zVar != null) {
            this.b = zVar;
            return;
        }
        throw new NullPointerException("sink == null");
    }

    @Override // com.debby.c
    public c a(byte[] bArr) {
        if (!this.c) {
            this.f448a.a(bArr);
            return c();
        }
        throw new IllegalStateException("closed");
    }

    @Override // com.debby.z
    public void a(b bVar, long j) {
        if (!this.c) {
            this.f448a.a(bVar, j);
            c();
            return;
        }
        throw new IllegalStateException("closed");
    }

    public c c() {
        if (!this.c) {
            long e = this.f448a.e();
            if (e > 0) {
                this.b.a(this.f448a, e);
            }
            return this;
        }
        throw new IllegalStateException("closed");
    }

    @Override // com.debby.z, java.io.Closeable, java.lang.AutoCloseable
    public void close() {
        if (this.c) {
            return;
        }
        Throwable th = null;
        try {
            b bVar = this.f448a;
            long j = bVar.b;
            if (j > 0) {
                this.b.a(bVar, j);
            }
        } catch (Throwable th2) {
            th = th2;
        }
        try {
            this.b.close();
        } catch (Throwable th3) {
            if (th == null) {
                th = th3;
            }
        }
        this.c = true;
        if (th == null) {
            return;
        }
        d0.a(th);
    }

    @Override // com.debby.c, com.debby.z, java.io.Flushable
    public void flush() {
        if (!this.c) {
            b bVar = this.f448a;
            long j = bVar.b;
            if (j > 0) {
                this.b.a(bVar, j);
            }
            this.b.flush();
            return;
        }
        throw new IllegalStateException("closed");
    }

    @Override // java.nio.channels.Channel
    public boolean isOpen() {
        return !this.c;
    }

    public String toString() {
        return "buffer(" + this.b + ")";
    }

    @Override // java.nio.channels.WritableByteChannel
    public int write(ByteBuffer byteBuffer) {
        if (!this.c) {
            int write = this.f448a.write(byteBuffer);
            c();
            return write;
        }
        throw new IllegalStateException("closed");
    }
}
