package com.debby;

import com.debby.b0;
import com.debby.f;
import java.io.IOException;
import java.net.Inet4Address;
import java.net.Inet6Address;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class o extends b0 {
    public Socket c;
    public ScheduledExecutorService d = Executors.newScheduledThreadPool(8);
    public ExecutorService e = Executors.newCachedThreadPool();
    public ExecutorService f = Executors.newFixedThreadPool(this.f412a.d);

    /* renamed from: g  reason: collision with root package name */
    public int f440g = this.f412a.f413a;
    public boolean h = true;
    public boolean i = false;
    public boolean j = false;

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class a extends Thread {
        public a(String str) {
            super(str);
        }

        @Override // java.lang.Thread, java.lang.Runnable
        public void run() {
            super.run();
            o.this.h = true;
            o oVar = o.this;
            oVar.f440g = oVar.f412a.f413a;
            o.this.f();
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class b implements Runnable {
        public b() {
        }

        @Override // java.lang.Runnable
        public void run() {
            try {
                o oVar = o.this;
                oVar.a(oVar.c);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class c implements Runnable {
        public c() {
        }

        @Override // java.lang.Runnable
        public void run() {
            o oVar = o.this;
            oVar.b(oVar.c);
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class d implements Runnable {

        /* renamed from: a  reason: collision with root package name */
        public final /* synthetic */ p f444a;

        /* loaded from: /mnt/shared/apks/menSe7ni.dex */
        public class a implements Runnable {

            /* renamed from: a  reason: collision with root package name */
            public final /* synthetic */ Socket f445a;
            public final /* synthetic */ Socket b;

            public a(Socket socket, Socket socket2) {
                this.f445a = socket;
                this.b = socket2;
            }

            @Override // java.lang.Runnable
            public void run() {
                o.this.a(this.f445a, this.b);
            }
        }

        /* loaded from: /mnt/shared/apks/menSe7ni.dex */
        public class b implements Runnable {

            /* renamed from: a  reason: collision with root package name */
            public final /* synthetic */ Socket f446a;
            public final /* synthetic */ Socket b;

            public b(Socket socket, Socket socket2) {
                this.f446a = socket;
                this.b = socket2;
            }

            @Override // java.lang.Runnable
            public void run() {
                o.this.a(this.f446a, this.b);
            }
        }

        public d(p pVar) {
            this.f444a = pVar;
        }

        @Override // java.lang.Runnable
        public void run() {
            o oVar;
            String str;
            String str2;
            int i;
            Socket socket = new Socket();
            Socket socket2 = new Socket();
            try {
                p pVar = this.f444a;
                socket.connect(new InetSocketAddress(pVar.c, pVar.d), 5000);
                socket.setKeepAlive(true);
                com.debby.c a2 = n.a(n.a(socket));
                a2.a((this.f444a.e + "|ok").getBytes());
                a2.flush();
                if (this.f444a.a().startsWith("v6")) {
                    oVar = o.this;
                    str = "ipv6";
                    p pVar2 = this.f444a;
                    str2 = pVar2.f447a;
                    i = pVar2.b;
                } else {
                    oVar = o.this;
                    str = "ipv4";
                    p pVar3 = this.f444a;
                    str2 = pVar3.f447a;
                    i = pVar3.b;
                }
                socket2.connect(oVar.a(str, str2, i), 5000);
                socket2.setKeepAlive(true);
                o.this.e.execute(new a(socket, socket2));
                o.this.e.execute(new b(socket2, socket));
            } catch (Exception e) {
                o.this.b.a(f.a.HandleTunnelError, e.getMessage());
                try {
                    if (!socket.isClosed()) {
                        socket.close();
                    }
                    if (socket2.isClosed()) {
                        return;
                    }
                    socket2.close();
                } catch (IOException e2) {
                    e2.printStackTrace();
                }
            }
        }
    }

    public o(b0.a aVar) {
        super(aVar);
    }

    public InetSocketAddress a(String str, String str2, int i) {
        InetAddress[] inetAddressArr;
        try {
            inetAddressArr = InetAddress.getAllByName(str2);
        } catch (UnknownHostException unused) {
            inetAddressArr = null;
        }
        if (inetAddressArr == null || inetAddressArr.length == 0) {
            return new InetSocketAddress(str2, i);
        }
        for (InetAddress inetAddress : inetAddressArr) {
            if (str.equals("ipv4") && (inetAddress instanceof Inet4Address)) {
                return new InetSocketAddress(inetAddress, i);
            }
            if (str.equals("ipv6") && (inetAddress instanceof Inet6Address)) {
                return new InetSocketAddress(inetAddress, i);
            }
        }
        return new InetSocketAddress(str2, i);
    }

    @Override // com.debby.b0
    public void a() {
        if (this.i) {
            return;
        }
        new a("OkioTcpClient").start();
    }

    @Override // com.debby.b0
    public void a(p pVar) {
        this.f.execute(new d(pVar));
    }

    public final void a(Socket socket) {
        String b2;
        String str = "读取中断失败";
        com.debby.d a2 = n.a(n.b(socket));
        while (!a2.a()) {
            try {
                try {
                    long a3 = a2.a((byte) 42);
                    if (a3 != -1) {
                        b2 = a2.b(a3);
                        a2.a(1L);
                    } else if (a2.b().g() != 0) {
                        b2 = a2.b(a2.b().g());
                    }
                    this.b.a(b2);
                } catch (Exception e) {
                    String message = e.getMessage();
                    f<String> fVar = this.b;
                    f.a aVar = f.a.ReadError;
                    if (message != null && !message.equals("")) {
                        str = message;
                    }
                    fVar.a(aVar, str);
                }
            } catch (Throwable th) {
                this.b.a(f.a.ReadError, str);
                e();
                throw th;
            }
        }
        this.b.a(f.a.ReadError, str);
        e();
    }

    public final void a(Socket socket, Socket socket2) {
        try {
            com.debby.d a2 = n.a(n.b(socket));
            com.debby.c a3 = n.a(n.a(socket2));
            com.debby.b bVar = new com.debby.b();
            while (!a2.a()) {
                long b2 = a2.b(bVar, 8192L);
                if (b2 > 0) {
                    a3.a(bVar, b2);
                    a3.flush();
                }
            }
            socket.close();
            socket2.close();
            a2.close();
            a3.close();
        } catch (Exception e) {
            this.b.a(f.a.TunnelError, e.getMessage());
        }
    }

    @Override // com.debby.b0
    public Boolean b() {
        return Boolean.valueOf(this.j);
    }

    public final void b(Socket socket) {
        try {
            com.debby.c a2 = n.a(n.a(socket));
            if (!a2.isOpen()) {
                return;
            }
            a2.a(this.f412a.f.getBytes());
            a2.flush();
        } catch (Exception e) {
            this.b.a(f.a.WriteError, e.getMessage());
        }
    }

    @Override // com.debby.b0
    public void c() {
        this.d.shutdownNow();
        this.e.shutdownNow();
        this.f.shutdownNow();
        this.h = false;
        this.j = false;
        g();
    }

    /* JADX WARN: Finally extract failed */
    public final void d() {
        try {
            try {
                this.i = true;
                Socket socket = new Socket();
                this.c = socket;
                b0.a aVar = this.f412a;
                socket.connect(new InetSocketAddress(aVar.b, aVar.c), 5000);
                this.c.setKeepAlive(true);
                this.j = true;
                this.d.execute(new b());
                this.d.scheduleAtFixedRate(new c(), 0L, this.f412a.e.longValue(), TimeUnit.SECONDS);
                this.b.a(f.a.ConnectSuccess, "连接成功");
            } catch (Exception e) {
                this.b.a(f.a.ConnectError, e.getMessage());
                this.i = false;
                e();
            }
            this.i = false;
        } catch (Throwable th) {
            this.i = false;
            throw th;
        }
    }

    public void e() {
        int i;
        try {
            boolean z = this.h;
            if (!z || (i = this.f440g) <= 0) {
                this.j = false;
                if (z) {
                    this.b.a(f.a.ReConnectStop, "重连上限，停止");
                }
            } else {
                this.f440g = i - 1;
                f();
            }
        } catch (Exception e) {
            e.printStackTrace();
            this.j = false;
            this.b.a(f.a.ReConnectStop, "重连失败");
        }
    }

    public final void f() {
        try {
            this.d.shutdownNow();
            this.e.shutdownNow();
            this.f.shutdownNow();
            this.d = Executors.newScheduledThreadPool(8);
            this.e = Executors.newCachedThreadPool();
            this.f = Executors.newFixedThreadPool(this.f412a.d);
            d();
        } catch (Exception e) {
            this.b.a(f.a.ConnectError, e.getMessage());
            e();
        }
    }

    public final void g() {
        try {
            if (this.c.isClosed()) {
                return;
            }
            this.c.close();
        } catch (Exception unused) {
        }
    }
}
