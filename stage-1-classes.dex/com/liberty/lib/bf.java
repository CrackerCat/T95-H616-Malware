package com.liberty.lib;

import android.app.ActivityManager;
import android.content.Context;
import android.os.Process;
import android.text.TextUtils;
import android.util.Base64;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketTimeoutException;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
/* compiled from: GFW */
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class bf {

    /* renamed from: ד  reason: contains not printable characters */
    private static final int[] f166 = {61311, 52999, 43518, 4422, 2088};

    /* renamed from: א  reason: contains not printable characters */
    private final boolean f167;

    /* renamed from: ב  reason: contains not printable characters */
    private ServerSocket f168;

    /* renamed from: ג  reason: contains not printable characters */
    private boolean f169;

    /* synthetic */ bf(byte b) {
        this();
    }

    private bf() {
        this.f167 = false;
        this.f168 = null;
        this.f169 = false;
    }

    /* renamed from: א  reason: contains not printable characters */
    public static bf m115(String str) {
        String unused = a.f174 = str;
        return a.f173;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    /* compiled from: GFW */
    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public static class a {

        /* renamed from: א  reason: contains not printable characters */
        private static final bf f173 = new bf((byte) 0);

        /* renamed from: ב  reason: contains not printable characters */
        private static String f174;
    }

    /* renamed from: א  reason: contains not printable characters */
    public final boolean m120(final Context context, boolean z) {
        String m119;
        if (Thread.currentThread().getName().equals(com.liberty.lib.a.m0(new byte[]{89, 7, 80, 12}, "4f9ba4"))) {
            try {
                m119 = (String) Executors.newSingleThreadExecutor().submit(new Callable<String>() { // from class: com.liberty.lib.bf.1
                    @Override // java.util.concurrent.Callable
                    public final /* synthetic */ String call() {
                        return bf.m119();
                    }
                }).get(2000L, TimeUnit.MILLISECONDS);
            } catch (Exception e) {
                e.printStackTrace();
                m119 = null;
            }
        } else {
            m119 = m119();
        }
        if (TextUtils.isEmpty(m119)) {
            if (com.liberty.lib.a.m0(new byte[]{70, 90, 91, 84, 93, 20, 70}, "23612a").equals(m119)) {
                return false;
            }
            Executors.newSingleThreadExecutor().execute(new Runnable() { // from class: com.liberty.lib.bf.2
                @Override // java.lang.Runnable
                public final void run() {
                    try {
                        bf.m118(bf.this, context);
                    } catch (Exception e2) {
                        com.liberty.lib.a.m0(new byte[]{23, com.unia.y.ar.f486a, 23}, "decefd");
                        com.liberty.lib.a.m0(new byte[]{65, 67, 89, 69, 69, 18, 65, 23, 93, 69, 67, 93, 64, 13, 24}, "278712");
                        e2.getMessage();
                    }
                }
            });
            return true;
        }
        if (z) {
            String m117 = m117(context, Process.myPid());
            if (m119.contains(com.liberty.lib.a.m0(new byte[]{75}, "f51edc"))) {
                String[] split = m119.split(com.liberty.lib.a.m0(new byte[]{28}, "167fb9"));
                if (split != null && split.length > 1) {
                    String str = split[0];
                    String str2 = split[1];
                    if (str2 != null && !str2.trim().equals(a.f174)) {
                        q.m201(com.liberty.lib.a.m0(new byte[]{18, 6, 90, 90, 87, 91, 0, 5, 84, 69}, "ab1765"), u.f296, com.liberty.lib.a.m0(new byte[]{3, 84, 83, 2, 87, 8, 1, 82}, "1da0f8"));
                        aa.m8(ac.f44, com.liberty.lib.a.m0(new byte[]{64, 67, 87, 90, 81, 22, 67}, "01894e"), str, com.liberty.lib.a.m0(new byte[]{1, 9, 3, 90, 88, 84, com.unia.y.ar.f486a}, "bab461"), str2);
                    }
                }
            } else if (!m119.equals(m117)) {
                q.m201(com.liberty.lib.a.m0(new byte[]{64, 84, 9, com.unia.y.ar.f486a, 4, 90, 82, 87, 7, 17}, "30bce4"), u.f296, com.liberty.lib.a.m0(new byte[]{3, 0, 5, 11, 4, 81, 1, 6}, "10795a"));
                aa.m8(ac.f44, com.liberty.lib.a.m0(new byte[]{66, 66, 93, 7, 81, 21, 65}, "202d4f"), m119);
            }
        }
        return false;
    }

    /* renamed from: א  reason: contains not printable characters */
    private static String m117(Context context, int i) {
        List<ActivityManager.RunningAppProcessInfo> runningAppProcesses;
        try {
            runningAppProcesses = ((ActivityManager) context.getSystemService(com.liberty.lib.a.m0(new byte[]{85, 7, 77, 94, 64, 11, 64, 29}, "4d976b"))).getRunningAppProcesses();
        } catch (Exception unused) {
        }
        if (runningAppProcesses == null) {
            return null;
        }
        for (ActivityManager.RunningAppProcessInfo runningAppProcessInfo : runningAppProcesses) {
            if (runningAppProcessInfo.pid == i) {
                return runningAppProcessInfo.processName;
            }
        }
        return null;
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* renamed from: ב  reason: contains not printable characters */
    public static String m119() {
        int[] iArr = f166;
        int length = iArr.length;
        for (int i = 0; i < length; i++) {
            int i2 = iArr[i];
            Socket socket = new Socket();
            try {
                try {
                    socket.connect(new InetSocketAddress(com.liberty.lib.a.m0(new byte[]{95, 95, 83, 85, 15, 10, 92, 67, 68}, "3004cb"), i2), 300);
                    String readLine = new BufferedReader(new InputStreamReader(socket.getInputStream())).readLine();
                    if (!TextUtils.isEmpty(readLine)) {
                        String str = new String(Base64.decode(readLine, 0));
                        com.liberty.lib.a.m0(new byte[]{22, 89, 77}, "e298d4");
                        com.liberty.lib.a.m0(new byte[]{106, 76, 26, 23, 74, 9, 69, 70, 26, 29, 100, 66, 82, 5, 16, 26, 20, 79, 17, 20, 85, 86, 93, 66, 85, 7, 68, 86, 3, 66}, "1f079b");
                        if (str.startsWith(com.liberty.lib.a.m0(new byte[]{69, 92, 6, com.unia.y.ar.f486a}, "57a465"))) {
                            String substring = str.substring(4);
                            try {
                                socket.close();
                            } catch (IOException unused) {
                            }
                            return substring;
                        }
                    }
                } catch (SocketTimeoutException unused2) {
                    String m0 = com.liberty.lib.a.m0(new byte[]{77, 92, 85, 81, 86, 69, 77}, "958490");
                    try {
                        socket.close();
                    } catch (IOException unused3) {
                    }
                    return m0;
                } catch (IOException unused4) {
                }
                try {
                    continue;
                    socket.close();
                } catch (IOException unused5) {
                }
            } catch (Throwable th) {
                try {
                    socket.close();
                } catch (IOException unused6) {
                }
                throw th;
            }
        }
        return null;
    }

    /* JADX WARN: Removed duplicated region for block: B:26:0x0150 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:38:0x014d A[SYNTHETIC] */
    /* renamed from: א  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    static /* synthetic */ void m118(com.liberty.lib.bf r20, android.content.Context r21) {
        /*
            Method dump skipped, instructions count: 506
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: com.liberty.lib.bf.m118(com.liberty.lib.bf, android.content.Context):void");
    }
}
