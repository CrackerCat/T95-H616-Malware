package com.liberty.lib;

import android.text.TextUtils;
import com.liberty.lib.o;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
/* compiled from: GFW */
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class aa {

    /* renamed from: א  reason: contains not printable characters */
    private static final String f40 = a.m0(new byte[]{1, 69, 86, 11, 17}, "d33ee9");

    /* renamed from: א  reason: contains not printable characters */
    public static void m2(x xVar) {
        m6(xVar, Collections.emptyMap());
    }

    /* renamed from: א  reason: contains not printable characters */
    public static void m6(x xVar, Map<String, String> map) {
        if (m14(xVar)) {
            m10(xVar, map);
        }
    }

    /* renamed from: א  reason: contains not printable characters */
    public static void m7(x xVar, Map<String, String> map, o.b bVar) {
        if (m14(xVar)) {
            m11(xVar, map, bVar);
        }
    }

    /* renamed from: ב  reason: contains not printable characters */
    private static void m10(x xVar, Map<String, String> map) {
        try {
            m11(xVar, map, null);
        } catch (Exception unused) {
        }
    }

    /* renamed from: ב  reason: contains not printable characters */
    private static void m11(x xVar, Map<String, String> map, o.b bVar) {
        Map<String, String> m200;
        String m235;
        if (!i.m182(d.m166())) {
            if (!y.m238()) {
                return;
            }
            a.m0(new byte[]{10, 93, 18, 87, 80, 18, 72, 18, 92, 86, 21, 20, 1, 66, 93, 75, 65, 92, 68}, "d2295f");
            return;
        }
        if (y.m238()) {
            a.m0(new byte[]{64, 4, 65, 90, 16, 76, 8, 65}, "2a15b8");
            a.m0(new byte[]{25, 13, 4, 11, 22}, "909560");
        }
        if (y.f312 && xVar.f310 < 3) {
            m200 = q.m202();
        } else {
            m200 = q.m200();
        }
        if (map != null && !map.isEmpty()) {
            m200.putAll(map);
        }
        m200.put(a.m0(new byte[]{6}, "cff9f5"), xVar.f309);
        if (!y.m233()) {
            return;
        }
        if (xVar.f310 == 1) {
            m235 = y.m237();
        } else {
            m235 = y.m235();
        }
        z.m239(m235, m200, bVar);
    }

    /* renamed from: א  reason: contains not printable characters */
    public static void m9(String str) {
        boolean booleanValue;
        int i = y.f314;
        x xVar = x.f308;
        if (y.f311 == 0) {
            booleanValue = false;
        } else {
            booleanValue = y.f315.containsKey(xVar.f309) ? y.f315.get(xVar.f309).booleanValue() : true;
        }
        if (y.m238()) {
            a.m0(new byte[]{15, 16, 107, 87, 73, com.unia.y.ar.f486a, 20, 23, 120, 81, 77, 8, 16, 6, 3, 18}, "fc929a");
        }
        if (booleanValue) {
            long m16 = ab.m16(str);
            long currentTimeMillis = System.currentTimeMillis();
            a.m0(new byte[]{17, 93, 64, 91, 65, 18, 34, 91, 68, 93, 69, 3, 67, 21, 29, 25, 19, 10, 2, 76, 85, 71, 71, 52, 6, 72, 95, 70, 71, 39, 0, 76, 89, 66, 86, 92, 67}, "c8043f");
            a.m0(new byte[]{68, com.unia.y.ar.f486a, 94, 9, 71, 89, 68}, "d50f0c");
            a.m0(new byte[]{67, 9, 92, 81, 80, 87, 89, 18}, "c28861");
            if (m16 == 0 || currentTimeMillis - m16 > i * 60 * 60 * 1000) {
                x xVar2 = x.f308;
                if (!m14(xVar2)) {
                    return;
                }
                m10(xVar2, q.m203());
                a.m0(new byte[]{5, 88, 49, 83, 70, 92, 19, 67, 67, 67, 70, 87, 0, 67, 6, 22, 66, 90, 12, 82, 67, 88, 89, 68, 91, 23}, "a7c663");
                ab.m17(str, currentTimeMillis);
            } else if (!y.m238()) {
            } else {
                a.m0(new byte[]{94, 95, 16, 22, 23, 3, 64, 95, 22, 66, 69, 7, 83, 68, 13, 64, 0, 74, 16, 89, 10, 66, 0, 20, 70, 81, 8, 22, 11, 9, 68, 16, 1, 88, 10, 19, 87, 88, 68, 27, 72, 75, 16, 94, 11, 65, 95, 70}, "00d6ef");
                a.m0(new byte[]{65, 88, 91, 82, 21, 83, 18, 23, 101, 86, 17, 89, 19, 23, 118, 80, 21, 95, 23, 6, 13, 19}, "ac73a6");
                a.m0(new byte[]{18, 15, 2, 1, 22, 92, 68, 81, 42, 12, 22, 80, 64, 66, 2, com.unia.y.ar.f486a, 88, 21}, "24cbb5");
            }
        }
    }

    /* renamed from: א  reason: contains not printable characters */
    public static void m3(x xVar, Throwable th) {
        if (m12(xVar)) {
            m10(xVar, m1(th));
        }
    }

    /* renamed from: א  reason: contains not printable characters */
    public static void m4(x xVar, Throwable th, String str) {
        if (m12(xVar)) {
            Map<String, String> m1 = m1(th);
            if (!TextUtils.isEmpty(str)) {
                m1.put(a.m0(new byte[]{85, 71, 94}, "84985a"), str);
            }
            m6(xVar, m1);
        }
    }

    /* renamed from: א  reason: contains not printable characters */
    public static void m5(x xVar, Throwable th, String... strArr) {
        if (strArr.length % 2 != 0) {
            throw new IllegalArgumentException(a.m0(new byte[]{-36, -67, -25, -126, -10, -42, -35, -118, -49, -126, -10, -42, -36, -115, -32, -115, -62, -35, -33, -70, -11, -127, -52, -33, -42, -114, -23, 15, 6, 31, 22, 68, 4, 8, 22, 3}, "92edcf"));
        }
        if (!m12(xVar)) {
            return;
        }
        HashMap hashMap = new HashMap();
        for (int i = 0; i < strArr.length - 1; i += 2) {
            try {
                hashMap.put(strArr[i], strArr[i + 1]);
            } catch (Exception unused) {
            }
        }
        hashMap.putAll(m1(th));
        m10(xVar, hashMap);
    }

    /* renamed from: ב  reason: contains not printable characters */
    private static boolean m12(x xVar) {
        boolean m13 = m13(xVar);
        if (y.m238()) {
            a.m0(new byte[]{65, com.unia.y.ar.f486a, 4, 13, 21, 13, 18, 97, 92, 67, 90, 22, 21, 118, 75, 65, 90, 22, 91, 19}, "a3935d");
        }
        return m13;
    }

    /* renamed from: ג  reason: contains not printable characters */
    private static boolean m13(x xVar) {
        if (y.f311 == 0) {
            return false;
        }
        if (y.f315.containsKey(xVar.f309)) {
            return y.f315.get(xVar.f309).booleanValue();
        }
        return y.f313;
    }

    /* renamed from: א  reason: contains not printable characters */
    private static Map<String, String> m1(Throwable th) {
        HashMap hashMap = new HashMap();
        if (th != null) {
            String message = th.getMessage();
            if (!TextUtils.isEmpty(message)) {
                hashMap.put(a.m0(new byte[]{83, 23, 17, 94, 20}, "6ec1fe"), message);
            }
            String arrays = Arrays.toString(th.getStackTrace());
            if (!TextUtils.isEmpty(arrays)) {
                hashMap.put(a.m0(new byte[]{69, 22, 87, 82, 93}, "1d6187"), arrays);
            }
        }
        return hashMap;
    }

    /* renamed from: ד  reason: contains not printable characters */
    private static boolean m14(x xVar) {
        boolean m15 = m15(xVar);
        if (y.m238()) {
            a.m0(new byte[]{20, 94, com.unia.y.ar.f486a, 11, 23, 10, 81, 6, 87, 21, 69, 1, 68, 12, 65, 65, 13, 68}, "4c357d");
        }
        return m15;
    }

    /* renamed from: ה  reason: contains not printable characters */
    private static boolean m15(x xVar) {
        if (y.f311 == 0) {
            return false;
        }
        if (y.f315.containsKey(xVar.f309)) {
            return y.f315.get(xVar.f309).booleanValue();
        }
        return y.f311 >= xVar.f310;
    }

    /* renamed from: א  reason: contains not printable characters */
    public static void m8(x xVar, String... strArr) {
        if (m14(xVar)) {
            if (strArr.length % 2 != 0) {
                throw new IllegalArgumentException(a.m0(new byte[]{-48, -65, -75, -124, -96, -126, -47, -120, -99, -124, -96, -126, -48, -113, -78, -117, -108, -119, -45, -72, -89, -121, -102, -117, -38, -116, -69, 9, 80, 75, 26, 70, 86, com.unia.y.ar.f486a, 64, 87}, "507b52"));
            }
            HashMap hashMap = new HashMap();
            for (int i = 0; i < strArr.length - 1; i += 2) {
                try {
                    hashMap.put(strArr[i], strArr[i + 1]);
                } catch (Exception unused) {
                }
            }
            m11(xVar, hashMap, null);
        }
    }
}
