package com.liberty.lib;

import android.os.AsyncTask;
import android.text.TextUtils;
import java.io.Closeable;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URLEncoder;
import java.util.Iterator;
import java.util.Map;
import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.SSLSession;
/* compiled from: GFW */
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public final class o {

    /* renamed from: א  reason: contains not printable characters */
    private static final String f252 = com.liberty.lib.a.m0(new byte[]{15, 3, 66}, "af6cb4");

    /* renamed from: ב  reason: contains not printable characters */
    private static final HostnameVerifier f253 = new HostnameVerifier() { // from class: com.liberty.lib.o.1
        @Override // javax.net.ssl.HostnameVerifier
        public final boolean verify(String str, SSLSession sSLSession) {
            return true;
        }
    };

    /* compiled from: GFW */
    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public static abstract class b {
        /* renamed from: א */
        public abstract void mo64();

        /* renamed from: א */
        public void mo65(c cVar) {
        }

        /* renamed from: ב */
        public abstract void mo66();
    }

    /* renamed from: א  reason: contains not printable characters */
    public static void m196(p pVar, b bVar) {
        new a(bVar).execute(pVar);
    }

    /* JADX WARN: Code restructure failed: missing block: B:106:0x03f0, code lost:
        r0.printStackTrace();
     */
    /* JADX WARN: Code restructure failed: missing block: B:110:0x045b, code lost:
        r9.disconnect();
     */
    /* JADX WARN: Code restructure failed: missing block: B:131:0x02a8, code lost:
        r0 = new java.io.ByteArrayOutputStream();
     */
    /* JADX WARN: Code restructure failed: missing block: B:132:0x02f5, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:133:0x02f6, code lost:
        r22 = r10;
        r2 = null;
     */
    /* JADX WARN: Code restructure failed: missing block: B:134:0x02fb, code lost:
        r0 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:135:0x02fc, code lost:
        r2 = r10;
     */
    /* JADX WARN: Code restructure failed: missing block: B:136:0x0309, code lost:
        r22 = null;
     */
    /* JADX WARN: Code restructure failed: missing block: B:137:0x0255, code lost:
        r0 = r9.getInputStream();
     */
    /* JADX WARN: Code restructure failed: missing block: B:54:0x024e, code lost:
        if (r2 < 400) goto L137;
     */
    /* JADX WARN: Code restructure failed: missing block: B:55:0x0250, code lost:
        r0 = r9.getErrorStream();
     */
    /* JADX WARN: Code restructure failed: missing block: B:56:0x0259, code lost:
        r10 = r0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:58:0x025a, code lost:
        if (r10 != null) goto L64;
     */
    /* JADX WARN: Code restructure failed: missing block: B:59:0x025c, code lost:
        r0 = new com.liberty.lib.o.c(r2, "");
     */
    /* JADX WARN: Code restructure failed: missing block: B:60:0x0263, code lost:
        m197((java.io.Closeable) null);
        m197(r10);
     */
    /* JADX WARN: Code restructure failed: missing block: B:61:0x026a, code lost:
        if (r9 == null) goto L63;
     */
    /* JADX WARN: Code restructure failed: missing block: B:62:0x026c, code lost:
        r9.disconnect();
     */
    /* JADX WARN: Code restructure failed: missing block: B:63:0x026f, code lost:
        return r0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:64:0x0270, code lost:
        r13 = r28.f267;
     */
    /* JADX WARN: Code restructure failed: missing block: B:65:0x0272, code lost:
        if (r13 == null) goto L131;
     */
    /* JADX WARN: Code restructure failed: missing block: B:66:0x0274, code lost:
        r0 = new java.io.File(r13);
     */
    /* JADX WARN: Code restructure failed: missing block: B:67:0x027d, code lost:
        if (r0.exists() != false) goto L79;
     */
    /* JADX WARN: Code restructure failed: missing block: B:68:0x027f, code lost:
        r25 = r0.getParentFile();
     */
    /* JADX WARN: Code restructure failed: missing block: B:69:0x0283, code lost:
        if (r25 == null) goto L73;
     */
    /* JADX WARN: Code restructure failed: missing block: B:71:0x0289, code lost:
        if (r25.exists() != false) goto L73;
     */
    /* JADX WARN: Code restructure failed: missing block: B:72:0x028b, code lost:
        r25.mkdirs();
     */
    /* JADX WARN: Code restructure failed: missing block: B:74:0x028e, code lost:
        r0.createNewFile();
     */
    /* JADX WARN: Code restructure failed: missing block: B:76:0x0292, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:78:0x0295, code lost:
        r0.printStackTrace();
     */
    /* JADX WARN: Removed duplicated region for block: B:106:0x03f0 A[Catch: all -> 0x045f, TryCatch #11 {all -> 0x045f, blocks: (B:104:0x03ec, B:106:0x03f0, B:107:0x03f3), top: B:103:0x03ec }] */
    /* JADX WARN: Removed duplicated region for block: B:110:0x045b  */
    /* JADX WARN: Removed duplicated region for block: B:117:0x046e  */
    /* JADX WARN: Removed duplicated region for block: B:51:0x02fe A[LOOP:0: B:16:0x0097->B:51:0x02fe, LOOP_END] */
    /* JADX WARN: Removed duplicated region for block: B:52:0x024c A[EDGE_INSN: B:52:0x024c->B:53:0x024c ?: BREAK  , SYNTHETIC] */
    /* renamed from: א  reason: contains not printable characters */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static com.liberty.lib.o.c m193(com.liberty.lib.p r28) {
        /*
            Method dump skipped, instructions count: 1166
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: com.liberty.lib.o.m193(com.liberty.lib.p):com.liberty.lib.o$c");
    }

    /* renamed from: א  reason: contains not printable characters */
    private static void m197(Closeable closeable) {
        if (closeable != null) {
            try {
                closeable.close();
            } catch (IOException unused) {
            }
        }
    }

    /* renamed from: א  reason: contains not printable characters */
    private static void m198(Map<String, String> map, HttpURLConnection httpURLConnection) {
        if (map == null || map.size() == 0 || httpURLConnection == null) {
            return;
        }
        for (Map.Entry<String, String> entry : map.entrySet()) {
            if (!TextUtils.isEmpty(entry.getKey())) {
                httpURLConnection.setRequestProperty(entry.getKey(), entry.getValue());
            }
        }
    }

    /* compiled from: GFW */
    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    static class a extends AsyncTask<p, Void, c> {

        /* renamed from: א  reason: contains not printable characters */
        private b f254;

        /* renamed from: ב  reason: contains not printable characters */
        private p f255;

        @Override // android.os.AsyncTask
        protected final void onPreExecute() {
        }

        @Override // android.os.AsyncTask
        protected final /* synthetic */ c doInBackground(p[] pVarArr) {
            p[] pVarArr2 = pVarArr;
            if (pVarArr2 == null || pVarArr2.length == 0) {
                return null;
            }
            p pVar = pVarArr2[0];
            this.f255 = pVar;
            return o.m193(pVar);
        }

        @Override // android.os.AsyncTask
        protected final /* synthetic */ void onPostExecute(c cVar) {
            c cVar2 = cVar;
            if (this.f254 != null) {
                p pVar = this.f255;
                if (pVar != null && pVar.f268) {
                    com.liberty.lib.a.m0(new byte[]{12, 7, 71}, "bb3b64");
                    com.liberty.lib.a.m0(new byte[]{75, 7, 70, 20, 94, 77, 25, 79, 24, 76, 31, 25, 90, 13, 81, 4, 8, 25}, "9b5a29");
                    com.liberty.lib.a.m0(new byte[]{24, 89, 87, 87, 87, 76, 93, 12, 64, 2, 25}, "8b4898");
                }
                if (cVar2.f256 == 200 || cVar2.f256 == 206) {
                    this.f254.mo64();
                    return;
                }
                this.f254.mo66();
                try {
                    this.f254.mo65(cVar2);
                } catch (Exception unused) {
                }
            }
        }

        public a(b bVar) {
            this.f254 = bVar;
        }
    }

    /* renamed from: א  reason: contains not printable characters */
    private static String m195(Map<String, String> map) {
        StringBuilder sb = new StringBuilder();
        if (map != null && map.size() > 0) {
            Iterator<Map.Entry<String, String>> it = map.entrySet().iterator();
            while (it.hasNext()) {
                try {
                    Map.Entry<String, String> next = it.next();
                    sb.append(next.getKey()).append(com.liberty.lib.a.m0(new byte[]{15}, "2c1f2e")).append(m194(next.getValue()));
                    if (it.hasNext()) {
                        sb.append(com.liberty.lib.a.m0(new byte[]{71}, "a61b38"));
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return sb.toString();
    }

    /* renamed from: א  reason: contains not printable characters */
    private static String m194(String str) {
        if (TextUtils.isEmpty(str) || str.getBytes().length == str.length()) {
            return str;
        }
        try {
            return URLEncoder.encode(str, com.liberty.lib.a.m0(new byte[]{100, 103, 117, 31, 92}, "1332d7"));
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(com.liberty.lib.a.m0(new byte[]{3, 15, 84, 12, 84, 1, 70, 4, 69, 17, 95, 22, 70}, "fa7c0d"), e);
        }
    }

    /* compiled from: GFW */
    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public static class c {

        /* renamed from: א  reason: contains not printable characters */
        public int f256;

        /* renamed from: ב  reason: contains not printable characters */
        public String f257;

        public c(int i, String str) {
            this.f256 = i;
            this.f257 = str;
        }
    }

    /* renamed from: ב  reason: contains not printable characters */
    public static void m199(p pVar, b bVar) {
        if (pVar.f267 != null) {
            new a(bVar).execute(pVar);
            return;
        }
        throw new IllegalStateException(com.liberty.lib.a.m0(new byte[]{91, 89, 13, 15, 70, 16, 93, 76, 37, 12, 17, 13, 84, 87, 0, 7, 32, 10, 84, 93, 65, 1, 3, 5, 87, 74, 4, 67, 3, 27, 93, 91, 20, 23, 3, 39, 87, 79, 15, 15, 9, 2, 92}, "88acfc"));
    }
}
