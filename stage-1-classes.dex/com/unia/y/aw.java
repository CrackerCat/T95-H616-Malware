package com.unia.y;

import java.net.Inet4Address;
import java.net.Inet6Address;
import java.net.UnknownHostException;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class aw {
    public static String a(byte[] bArr) {
        return a(bArr, 0, bArr.length);
    }

    public static String a(byte[] bArr, int i, int i2) {
        if (i2 != 4) {
            if (i2 != 16) {
                throw new IllegalArgumentException("length: " + i2 + " (expected: 4 or 16)");
            }
            return a(bArr, i, false);
        }
        return new StringBuilder(15).append(bArr[i] & 255).append('.').append(bArr[i + 1] & 255).append('.').append(bArr[i + 2] & 255).append('.').append(bArr[i + 3] & 255).toString();
    }

    private static String a(byte[] bArr, int i, boolean z) {
        int i2;
        int i3;
        int[] iArr = new int[8];
        int i4 = i + 8;
        while (true) {
            i2 = 1;
            if (i >= i4) {
                break;
            }
            int i5 = i << 1;
            iArr[i] = (bArr[i5 + 1] & 255) | ((bArr[i5] & 255) << 8);
            i++;
        }
        int i6 = -1;
        boolean z2 = false;
        int i7 = 0;
        int i8 = -1;
        int i9 = 0;
        int i10 = -1;
        while (i7 < 8) {
            if (iArr[i7] == 0) {
                if (i8 < 0) {
                    i8 = i7;
                }
            } else if (i8 >= 0) {
                int i11 = i7 - i8;
                if (i11 > i9) {
                    i9 = i11;
                } else {
                    i8 = i10;
                }
                i10 = i8;
                i8 = -1;
            }
            i7++;
        }
        if (i8 < 0 || (i3 = i7 - i8) <= i9) {
            i8 = i10;
        } else {
            i9 = i3;
        }
        if (i9 == 1) {
            i9 = 0;
        } else {
            i6 = i8;
        }
        int i12 = i9 + i6;
        StringBuilder sb = new StringBuilder(39);
        if (i12 < 0) {
            sb.append(Integer.toHexString(iArr[0]));
            while (i2 < 8) {
                sb.append(':');
                sb.append(Integer.toHexString(iArr[i2]));
                i2++;
            }
        } else {
            if (!a(0, i6, i12)) {
                sb.append(Integer.toHexString(iArr[0]));
            } else {
                sb.append("::");
                if (z && i12 == 5 && iArr[5] == 65535) {
                    z2 = true;
                }
            }
            while (i2 < 8) {
                if (!a(i2, i6, i12)) {
                    if (!a(i2 - 1, i6, i12)) {
                        if (!z2 || i2 == 6) {
                            sb.append(':');
                        } else {
                            sb.append('.');
                        }
                    }
                    if (!z2 || i2 <= 5) {
                        sb.append(Integer.toHexString(iArr[i2]));
                    } else {
                        sb.append(iArr[i2] >> 8);
                        sb.append('.');
                        sb.append(iArr[i2] & 255);
                    }
                } else if (!a(i2 - 1, i6, i12)) {
                    sb.append("::");
                }
                i2++;
            }
        }
        return sb.toString();
    }

    private static boolean a(int i, int i2, int i3) {
        return i >= i2 && i < i3;
    }

    public static byte[] a(String str) {
        try {
            return Inet4Address.getByName(str).getAddress();
        } catch (UnknownHostException unused) {
            throw new IllegalArgumentException("bad IP number");
        }
    }

    public static byte[] b(String str) {
        try {
            return Inet6Address.getByName(str).getAddress();
        } catch (UnknownHostException unused) {
            throw new IllegalArgumentException("bad IP number");
        }
    }
}
