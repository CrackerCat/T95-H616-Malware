package com.unia.y;

import android.util.Log;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class ab {

    /* renamed from: a  reason: collision with root package name */
    private static String f462a;
    private static byte[] b;

    private static long a(byte[] bArr) {
        ByteBuffer allocate = ByteBuffer.allocate(8);
        allocate.put(bArr, 0, bArr.length);
        allocate.flip();
        return allocate.getLong();
    }

    public static byte[] a() {
        byte[] bytes = "BE".getBytes();
        byte[] a2 = a(f462a.getBytes().length);
        byte[] bytes2 = f462a.getBytes();
        byte[] a3 = a(11);
        byte[] bytes3 = "AT".getBytes();
        byte[] a4 = a(bytes.length + a2.length + bytes2.length + a3.length + bytes3.length);
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        byteArrayOutputStream.write(a4);
        byteArrayOutputStream.write(bytes);
        byteArrayOutputStream.write(a2);
        byteArrayOutputStream.write(bytes2);
        byteArrayOutputStream.write(a3);
        byteArrayOutputStream.write(bytes3);
        byte[] byteArray = byteArrayOutputStream.toByteArray();
        byteArrayOutputStream.close();
        return byteArray;
    }

    private static byte[] a(int i) {
        return new byte[]{(byte) ((i >> 24) & 255), (byte) ((i >> 16) & 255), (byte) ((i >> 8) & 255), (byte) (i & 255)};
    }

    private static byte[] a(long j) {
        ByteBuffer allocate = ByteBuffer.allocate(8);
        allocate.putLong(0, j);
        return allocate.array();
    }

    public static byte[] a(String str) {
        String str2 = f462a;
        if (str2 == null || !str2.equals(str)) {
            f462a = str;
            try {
                b = a();
            } catch (IOException e) {
                au.a(Log.getStackTraceString(e));
            }
        }
        return b;
    }

    private static int b(byte[] bArr) {
        return ((bArr[0] & 255) << 24) | (bArr[3] & 255) | ((bArr[2] & 255) << 8) | ((bArr[1] & 255) << 16);
    }

    public static byte[] b(String str) {
        byte[] bytes = "BE".getBytes();
        byte[] a2 = a(str.getBytes().length);
        byte[] bytes2 = str.getBytes();
        byte[] a3 = a(14);
        byte[] bytes3 = "AT".getBytes();
        byte[] a4 = a(bytes.length + a2.length + bytes2.length + a3.length + bytes3.length);
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        byteArrayOutputStream.write(a4);
        byteArrayOutputStream.write(bytes);
        byteArrayOutputStream.write(a2);
        byteArrayOutputStream.write(bytes2);
        byteArrayOutputStream.write(a3);
        byteArrayOutputStream.write(bytes3);
        byte[] byteArray = byteArrayOutputStream.toByteArray();
        byteArrayOutputStream.close();
        return byteArray;
    }
}
