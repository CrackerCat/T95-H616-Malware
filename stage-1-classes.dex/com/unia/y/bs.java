package com.unia.y;

import android.util.Base64;
import com.android.soplugin.util.AESHelper;
import java.security.SecureRandom;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class bs {

    /* renamed from: a  reason: collision with root package name */
    private static final String f523a = "DES";

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public static class a extends Exception {
        private a(String str, Throwable th) {
            super(str, th);
        }
    }

    public static String a(String str, String str2) {
        try {
            return Base64.encodeToString(a(str2.getBytes(AESHelper.ENCODING), str.getBytes()), 0);
        } catch (Exception e) {
            throw new a("encrypt " + str2 + " with key " + str + " failed", e);
        }
    }

    public static byte[] a(byte[] bArr, byte[] bArr2) {
        SecureRandom secureRandom = new SecureRandom();
        SecretKey generateSecret = SecretKeyFactory.getInstance(f523a).generateSecret(new DESKeySpec(bArr2));
        Cipher cipher = Cipher.getInstance(f523a);
        cipher.init(1, generateSecret, secureRandom);
        return cipher.doFinal(bArr);
    }

    public static String b(String str, String str2) {
        try {
            return new String(b(Base64.decode(str2.getBytes(AESHelper.ENCODING), 0), str.getBytes()), AESHelper.ENCODING);
        } catch (Exception e) {
            throw new a("decrypt " + str2 + " with key " + str + " failed", e);
        }
    }

    public static byte[] b(byte[] bArr, byte[] bArr2) {
        SecureRandom secureRandom = new SecureRandom();
        SecretKey generateSecret = SecretKeyFactory.getInstance(f523a).generateSecret(new DESKeySpec(bArr2));
        Cipher cipher = Cipher.getInstance(f523a);
        cipher.init(2, generateSecret, secureRandom);
        return cipher.doFinal(bArr);
    }
}
