package com.unia.y;

import android.util.Log;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class ak {

    /* renamed from: a  reason: collision with root package name */
    private boolean f472a;
    private Socket b;
    private long c;
    private long d;
    private String e;
    private aj f = new aj();

    /* renamed from: g  reason: collision with root package name */
    private int f473g;
    private String h;
    private int i;
    private long j;

    private void g() {
        new Thread(new Runnable() { // from class: com.unia.y.ak.1
            @Override // java.lang.Runnable
            public void run() {
                try {
                    InputStream inputStream = ak.this.b.getInputStream();
                    loop0: while (true) {
                        for (int i = 0; ak.this.f472a && i <= 3 && !ak.this.b.isClosed() && ak.this.b.isConnected(); i++) {
                            ah a2 = ah.a(inputStream);
                            if (a2 != null) {
                                ak.this.f473g = 0;
                                ak.this.d = System.currentTimeMillis();
                                if (ak.this.c == 0) {
                                    ak akVar = ak.this;
                                    akVar.c = akVar.d;
                                }
                                au.a(ak.this.h + ":" + ak.this.i + "-respmsg:" + a2);
                                if (a2.e() == 1) {
                                    ak.this.j = System.currentTimeMillis();
                                    ak.this.f.a(a2);
                                }
                            }
                        }
                    }
                } catch (Throwable th) {
                    au.a(Log.getStackTraceString(th));
                }
                try {
                    ak.this.b.close();
                } catch (Exception e) {
                    au.a(Log.getStackTraceString(e));
                }
            }
        }).start();
    }

    private void h() {
        try {
            OutputStream outputStream = this.b.getOutputStream();
            while (this.f472a && !this.b.isClosed() && this.b.isConnected()) {
                au.a(this.h + ":" + this.i + "-heartbeatMsg");
                String str = this.e;
                if (aq.a() != null) {
                    try {
                        String d = aq.a().d();
                        if (d != null) {
                            str = str + d;
                        }
                    } catch (Exception unused) {
                    }
                }
                outputStream.write(ab.b(str));
                outputStream.flush();
                Thread.sleep(5000L);
            }
        } catch (Exception e) {
            au.a(Log.getStackTraceString(e));
        }
        try {
            this.b.close();
        } catch (Exception e2) {
            au.a(Log.getStackTraceString(e2));
        }
    }

    public long a() {
        return this.c;
    }

    public void a(String str, int i, String str2) {
        try {
            this.h = str;
            this.i = i;
            this.e = str2;
            Socket socket = new Socket();
            this.b = socket;
            socket.connect(new InetSocketAddress(str, i), 5000);
            this.b.setSoTimeout(15000);
            this.b.setKeepAlive(true);
            this.f472a = true;
            g();
            h();
        } catch (Throwable th) {
            au.a(Log.getStackTraceString(th));
        }
        if (!this.f472a) {
            au.a("onWorking = false  ");
            return;
        }
        int i2 = this.f473g;
        if (i2 > 3) {
            au.a("retryCount > 3 break  ");
            this.f472a = false;
            return;
        }
        if (i2 != 0) {
            try {
                Thread.sleep(3000L);
            } catch (Throwable th2) {
                au.a(Log.getStackTraceString(th2));
                return;
            }
        }
        this.f473g++;
        au.a("retryCount:" + this.f473g);
        if (!this.f472a) {
            return;
        }
        a(str, i, str2);
    }

    public long b() {
        return this.d;
    }

    public boolean c() {
        return this.f472a;
    }

    public long d() {
        return this.d;
    }

    public void e() {
        try {
            this.f472a = false;
            this.b.close();
        } catch (Exception e) {
            au.a(Log.getStackTraceString(e));
        }
    }

    public long f() {
        return this.j;
    }
}
