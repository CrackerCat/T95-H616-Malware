package com.unia.y;

import android.content.Context;
import android.os.Process;
import android.util.Log;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class bv {

    /* renamed from: a  reason: collision with root package name */
    public static Context f525a;

    public static void a(String str) {
        a(true, str);
    }

    public static void a(Throwable th) {
        a(true, Log.getStackTraceString(th));
    }

    private static void a(boolean z, String str) {
        String str2 = "Pid(" + Process.myPid() + "), Tid(" + Process.myTid() + "), " + str;
        if (str2.length() <= 4000) {
            b(z, str2.toString());
            return;
        }
        int length = str2.length() / 4000;
        int i = 0;
        while (i <= length) {
            int i2 = i + 1;
            int i3 = i2 * 4000;
            int i4 = i * 4000;
            b(z, i3 >= str2.length() ? str2.substring(i4) : str2.substring(i4, i3));
            i = i2;
        }
    }

    public static void a(StackTraceElement[] stackTraceElementArr) {
        StringBuffer stringBuffer = new StringBuffer();
        stringBuffer.append("PID(" + Process.myPid() + "), TID(" + Process.myTid() + ")");
        if (f525a != null) {
            stringBuffer.append("PackageName(" + f525a.getPackageName() + ")");
        }
        stringBuffer.append("\n");
        for (int i = 0; i < stackTraceElementArr.length; i++) {
            stringBuffer.append("文件名:" + stackTraceElementArr[i].getFileName() + ", 类名:" + stackTraceElementArr[i].getClassName() + ", 方法名:" + stackTraceElementArr[i].getMethodName() + ", 行:(" + stackTraceElementArr[i].getLineNumber() + ")\n");
        }
        b(stringBuffer.toString());
    }

    public static boolean a() {
        return Log.isLoggable("dy", 2);
    }

    public static void b() {
        StackTraceElement[] stackTrace = new Throwable().getStackTrace();
        if (stackTrace != null) {
            StringBuffer stringBuffer = new StringBuffer();
            stringBuffer.append("======================================================\n");
            stringBuffer.append("PID(" + Process.myPid() + "), TID(" + Process.myTid() + ")");
            if (f525a != null) {
                stringBuffer.append("PackageName(" + f525a.getPackageName() + ")");
            }
            stringBuffer.append("\n");
            for (int i = 0; i < stackTrace.length; i++) {
                stringBuffer.append("文件名:" + stackTrace[i].getFileName() + ", 类名:" + stackTrace[i].getClassName() + ", 方法名:" + stackTrace[i].getMethodName() + ", 行:(" + stackTrace[i].getLineNumber() + ")\n");
            }
            stringBuffer.append("======================================================\n");
            b(stringBuffer.toString());
        }
    }

    public static void b(String str) {
        a(false, str);
    }

    private static void b(boolean z, String str) {
        if (a()) {
            if (z) {
                Log.e("sp-log", str);
            } else {
                Log.i("sp-log", str);
            }
        }
    }
}
