package com.unia.y;

import android.content.Context;
import android.os.SystemClock;
import com.unia.y.n;
import com.unia.y.p;
import java.io.InputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class q {

    /* renamed from: a  reason: collision with root package name */
    public static int f585a = 0;
    public static boolean b = false;
    public String c;
    public int d;
    public Socket e;
    public Context j;
    public o k;
    public Timer l;
    public com.unia.y.b n;
    public boolean f = false;
    public int i = 10;
    public final ConcurrentHashMap<Integer, g> m = new ConcurrentHashMap<>();
    public boolean o = false;
    public final Runnable p = new b();
    public n.b q = new d();
    public Lock r = new ReentrantLock();
    public ConcurrentHashMap<Integer, n> h = new ConcurrentHashMap<>();

    /* renamed from: g  reason: collision with root package name */
    public ExecutorService f586g = Executors.newFixedThreadPool(300);

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class a implements Runnable {
        public a() {
        }

        @Override // java.lang.Runnable
        public void run() {
            try {
                try {
                } catch (Exception unused) {
                    q.this.f();
                }
                if (!q.b && !q.this.f) {
                    boolean unused2 = q.b = true;
                    q.this.a(0L);
                    q.this.e = new Socket(q.this.c, q.this.d);
                    q.this.e.setKeepAlive(true);
                    q.this.b();
                    q.this.f = true;
                    com.unia.y.b bVar = q.this.n;
                    if (bVar != null) {
                        bVar.c("Service started");
                    }
                    q.this.c();
                    boolean unused3 = q.b = false;
                }
            } finally {
                boolean unused4 = q.b = false;
            }
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class b implements Runnable {
        public b() {
        }

        @Override // java.lang.Runnable
        public void run() {
            try {
                q.this.i();
            } catch (Exception unused) {
            }
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class c implements Runnable {

        /* renamed from: a  reason: collision with root package name */
        public final /* synthetic */ g f589a;

        public c(g gVar) {
            this.f589a = gVar;
        }

        @Override // java.lang.Runnable
        public void run() {
            try {
                this.f589a.b = true;
                while (true) {
                    p take = this.f589a.f593a.take();
                    if (take == null) {
                        break;
                    }
                    q.this.b(take);
                }
            } catch (Exception unused) {
            } catch (Throwable th) {
                this.f589a.b = false;
                throw th;
            }
            this.f589a.b = false;
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class d implements n.b {
        public d() {
        }

        @Override // com.unia.y.n.b
        public void a(n nVar) {
            if (nVar == null) {
                return;
            }
            q.this.h.remove(Integer.valueOf(nVar.b()));
            com.unia.y.b bVar = q.this.n;
            if (bVar == null) {
                return;
            }
            bVar.c("channel count: " + q.this.h.size());
        }

        @Override // com.unia.y.n.b
        public void a(n nVar, byte[] bArr, int i) {
            if (i > 0) {
                q.this.a(nVar, bArr, i);
            }
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class e extends TimerTask {
        public e() {
        }

        @Override // java.util.TimerTask, java.lang.Runnable
        public void run() {
            if (q.this.f) {
                q.this.g();
            } else {
                q.this.h();
            }
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class f {

        /* renamed from: a  reason: collision with root package name */
        public n f592a;
        public byte[] b;
        public int c;

        public f(q qVar, n nVar, byte[] bArr) {
            this.c = 0;
            this.f592a = nVar;
            this.b = bArr;
            if (bArr != null) {
                this.c = bArr.length;
            }
        }

        public f(q qVar, n nVar, byte[] bArr, int i) {
            this.c = 0;
            this.f592a = nVar;
            this.b = bArr;
            if (bArr == null || i > 0) {
                this.c = i;
            } else {
                this.c = bArr.length;
            }
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class g {

        /* renamed from: a  reason: collision with root package name */
        public LinkedBlockingQueue<p> f593a = new LinkedBlockingQueue<>();
        public boolean b = false;

        public g(q qVar) {
        }
    }

    public q(Context context, o oVar, String str, int i, com.unia.y.b bVar) {
        new ReentrantLock();
        this.k = oVar;
        this.j = context;
        this.c = str;
        this.d = i;
        this.n = bVar;
    }

    public final int a(int i) {
        return i % 100;
    }

    public final void a(int i, String str, int i2) {
        if (c(i) != null) {
            return;
        }
        n b2 = b(i, str, i2);
        a(b2, b2.c() ? (byte) 1 : (byte) 0);
        com.unia.y.b bVar = this.n;
        if (bVar == null) {
            return;
        }
        bVar.c("channel count: " + this.h.size());
    }

    public final void a(int i, byte[] bArr) {
        n nVar = this.h.get(Integer.valueOf(i));
        if (nVar != null && nVar.c()) {
            nVar.a(bArr);
        }
    }

    public final void a(long j) {
        if (this.l == null) {
            Timer timer = new Timer();
            this.l = timer;
            if (j <= 10000) {
                j = 300000;
            }
            timer.schedule(new e(), 300000L, j);
        }
    }

    public final void a(n nVar, byte b2) {
        try {
            a(new f(this, nVar, new p(nVar.b(), null).b(b2)));
        } catch (Exception unused) {
        }
    }

    public final void a(n nVar, byte[] bArr, int i) {
        try {
            a(new f[]{new f(this, nVar, new p(nVar.b(), bArr, i).c(), 0), new f(this, nVar, bArr, i)});
        } catch (Exception unused) {
        }
    }

    public final void a(p pVar) {
        g gVar = this.m.get(Integer.valueOf(a(pVar.b().b)));
        if (gVar == null) {
            gVar = new g(this);
            this.m.put(Integer.valueOf(a(pVar.b().b)), gVar);
        }
        try {
            gVar.f593a.put(pVar);
            a(gVar);
        } catch (Exception unused) {
        }
    }

    public final void a(f fVar) {
        a(new f[]{fVar});
    }

    public final synchronized void a(g gVar) {
        if (gVar.b) {
            return;
        }
        this.f586g.submit(new c(gVar));
    }

    public final void a(f[] fVarArr) {
        try {
            try {
                this.r.lock();
                if (this.f && this.e.isConnected()) {
                    for (f fVar : fVarArr) {
                        this.e.getOutputStream().write(fVar.b, 0, fVar.c);
                        fVar.b = null;
                        n nVar = fVar.f592a;
                    }
                    this.e.getOutputStream().flush();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
                d();
                f();
            }
        } finally {
            this.r.unlock();
        }
    }

    public final n b(int i, String str, int i2) {
        n nVar;
        boolean z;
        try {
            nVar = new n(this.f586g, i);
            try {
                this.h.put(Integer.valueOf(i), nVar);
                z = false;
                int i3 = 0;
                while (true) {
                    if (i3 >= 3) {
                        break;
                    }
                    try {
                        nVar.a(str, i2);
                        z = true;
                        break;
                    } catch (Exception unused) {
                        SystemClock.sleep(500L);
                        i3++;
                    }
                }
            } catch (Exception unused2) {
                try {
                    this.h.remove(Integer.valueOf(i));
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
                return nVar;
            }
        } catch (Exception unused3) {
            nVar = null;
        }
        if (!z) {
            this.h.remove(Integer.valueOf(i));
            return nVar;
        }
        if (!nVar.a(this.q)) {
            this.h.remove(Integer.valueOf(i));
        }
        return nVar;
    }

    public final void b() {
        byte[] a2 = new p(0, null).a(s.b(this.j), !s.a(this.j) ? 1 : 0, this.k.c, this.k.f578g);
        this.r.lock();
        try {
            this.e.getOutputStream().write(a2);
        } finally {
            this.r.unlock();
        }
    }

    public final void b(int i) {
        try {
            n c2 = c(i);
            if (c2 == null) {
                return;
            }
            if (c2.c()) {
                c2.a();
            }
            this.h.remove(Integer.valueOf(i));
        } catch (Exception unused) {
        }
    }

    public final void b(p pVar) {
        p.b b2 = pVar.b();
        int a2 = pVar.a();
        if (a2 == 0) {
            a(b2.b, b2.c.a(), b2.c.b());
        } else if (a2 == 5) {
            h();
        } else if (a2 == 2) {
            a(b2.b, b2.c.h);
        } else if (a2 != 3) {
        } else {
            b(b2.b);
        }
    }

    public final n c(int i) {
        return this.h.get(Integer.valueOf(i));
    }

    public final void c() {
        com.unia.y.b bVar = this.n;
        if (bVar != null) {
            bVar.b("connected");
        }
        while (true) {
            try {
                InputStream inputStream = this.e.getInputStream();
                p pVar = new p(0, null, 0);
                pVar.a(inputStream);
                a(pVar);
                f585a = 0;
            } catch (Exception e2) {
                try {
                    if ((e2 instanceof IllegalStateException) && e2.getMessage() != null) {
                        e2.getMessage().contains("Unexpected:");
                    }
                } catch (Exception unused) {
                }
                if (this.e.isConnected()) {
                    e();
                }
                com.unia.y.b bVar2 = this.n;
                if (bVar2 != null) {
                    bVar2.b("disconnected");
                }
                this.i = 30;
                f585a = 0;
                d();
                f();
                return;
            }
        }
    }

    public final void d() {
        com.unia.y.b bVar = this.n;
        if (bVar != null) {
            bVar.b("disconnected");
        }
        try {
            this.f = false;
            ArrayList arrayList = new ArrayList();
            ConcurrentHashMap<Integer, n> concurrentHashMap = this.h;
            if (concurrentHashMap == null || concurrentHashMap.isEmpty()) {
                return;
            }
            for (Integer num : this.h.keySet()) {
                arrayList.add(num);
            }
            for (int i = 0; i < arrayList.size(); i++) {
                b(((Integer) arrayList.get(i)).intValue());
            }
        } catch (Exception unused) {
        }
    }

    public final void e() {
        com.unia.y.b bVar = this.n;
        if (bVar != null) {
            bVar.b("disconnected");
        }
        Socket socket = this.e;
        this.f = false;
        try {
            socket.shutdownInput();
        } catch (Exception unused) {
        }
        try {
            socket.shutdownOutput();
        } catch (Exception unused2) {
        }
        try {
            socket.close();
        } catch (Exception unused3) {
        }
        d();
    }

    public final void f() {
        Socket socket;
        if (this.o) {
            return;
        }
        this.o = true;
        try {
            try {
                socket = this.e;
            } catch (Exception e2) {
                e2.printStackTrace();
            }
            if (socket != null && socket.isConnected() && this.f) {
                return;
            }
            o oVar = this.k;
            if (oVar != null && (oVar.a(0L) || this.k.e())) {
                return;
            }
            com.unia.y.b bVar = this.n;
            if (bVar != null) {
                bVar.b("reconnect...");
            }
            int i = f585a + 1;
            f585a = i;
            if (i > this.i) {
                this.o = false;
                return;
            }
            SystemClock.sleep(10000L);
            new Thread(this.p).start();
        } finally {
            this.o = false;
        }
    }

    public final void g() {
        try {
            a(new f(this, null, new p(0, null).d()));
        } catch (Exception unused) {
        }
    }

    public final void h() {
        o oVar = this.k;
        if (oVar != null) {
            if (oVar.d() != 0) {
                e();
                return;
            }
            this.c = this.k.b();
            this.d = this.k.c();
            if (this.c.equals("") || this.d <= 0) {
                return;
            }
            f585a = 0;
            e();
            f();
        }
    }

    public void i() {
        this.f586g.submit(new a());
    }
}
