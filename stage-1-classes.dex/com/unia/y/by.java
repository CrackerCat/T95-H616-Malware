package com.unia.y;

import java.io.Closeable;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class by {

    /* renamed from: a  reason: collision with root package name */
    public static final int f528a = -1;
    public static final int b = 1;
    public static final int c = 2;

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public static class a extends Exception {
        private a(String str, Throwable th) {
            super(str, th);
        }
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r5v0, types: [java.lang.String] */
    /* JADX WARN: Type inference failed for: r5v2 */
    /* JADX WARN: Type inference failed for: r5v4, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r5v6, types: [java.net.HttpURLConnection] */
    public static int a(String str, String str2) {
        InputStream inputStream;
        Closeable closeable;
        Throwable th;
        Object obj;
        File file = new File(str2);
        if (file.exists()) {
            return 2;
        }
        try {
            try {
                file.getParentFile().mkdirs();
                file.createNewFile();
                str = (HttpURLConnection) new URL(str).openConnection();
            } catch (Throwable th2) {
                th = th2;
            }
        } catch (IOException e) {
            e = e;
            obj = null;
        } catch (Throwable th3) {
            inputStream = null;
            closeable = null;
            th = th3;
            str = 0;
        }
        try {
            str.setConnectTimeout(10000);
            str.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)");
            inputStream = str.getInputStream();
            try {
                FileOutputStream fileOutputStream = new FileOutputStream(file);
                try {
                    byte[] bArr = new byte[1024];
                    while (true) {
                        int read = inputStream.read(bArr);
                        if (read <= 0) {
                            break;
                        }
                        fileOutputStream.write(bArr, 0, read);
                    }
                    cb.a(fileOutputStream);
                    cb.a((Closeable) inputStream);
                    if (str != 0) {
                        str.disconnect();
                    }
                    return 1;
                } catch (IOException e2) {
                    e = e2;
                    throw new a("httpDownload failed", e);
                }
            } catch (IOException e3) {
                e = e3;
            } catch (Throwable th4) {
                th = th4;
                closeable = null;
                th = th;
                cb.a(closeable);
                cb.a((Closeable) inputStream);
                if (str != 0) {
                    str.disconnect();
                }
                throw th;
            }
        } catch (IOException e4) {
            e = e4;
            obj = null;
            throw new a("httpDownload failed", e);
        } catch (Throwable th5) {
            th = th5;
            inputStream = null;
            closeable = null;
        }
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:45:0x00fd  */
    /* JADX WARN: Type inference failed for: r8v4 */
    /* JADX WARN: Type inference failed for: r8v6, types: [java.net.HttpURLConnection] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static java.lang.String a(java.lang.String r8, java.util.Map<java.lang.String, java.lang.String> r9) {
        /*
            Method dump skipped, instructions count: 259
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: com.unia.y.by.a(java.lang.String, java.util.Map):java.lang.String");
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:37:0x00aa  */
    /* JADX WARN: Type inference failed for: r6v4 */
    /* JADX WARN: Type inference failed for: r6v6, types: [java.net.HttpURLConnection] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public static java.lang.String b(java.lang.String r6, java.lang.String r7) {
        /*
            r0 = 0
            java.net.URL r1 = new java.net.URL     // Catch: java.lang.Throwable -> L90 java.io.IOException -> L94
            r1.<init>(r6)     // Catch: java.lang.Throwable -> L90 java.io.IOException -> L94
            java.net.URLConnection r6 = r1.openConnection()     // Catch: java.lang.Throwable -> L90 java.io.IOException -> L94
            java.net.HttpURLConnection r6 = (java.net.HttpURLConnection) r6     // Catch: java.lang.Throwable -> L90 java.io.IOException -> L94
            java.lang.String r1 = "POST"
            r6.setRequestMethod(r1)     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            r1 = 1
            r6.setDoInput(r1)     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            r6.setDoOutput(r1)     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            r2 = 0
            r6.setUseCaches(r2)     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            r6.setInstanceFollowRedirects(r1)     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            java.lang.String r1 = "Content-Type"
            java.lang.String r2 = "application/x-www-form-urlencoded"
            r6.setRequestProperty(r1, r2)     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            java.io.DataOutputStream r1 = new java.io.DataOutputStream     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            java.io.OutputStream r2 = r6.getOutputStream()     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            r1.<init>(r2)     // Catch: java.lang.Throwable -> L8a java.io.IOException -> L8d
            r1.writeBytes(r7)     // Catch: java.lang.Throwable -> L84 java.io.IOException -> L87
            r1.flush()     // Catch: java.lang.Throwable -> L84 java.io.IOException -> L87
            r1.close()     // Catch: java.lang.Throwable -> L84 java.io.IOException -> L87
            java.lang.String r7 = ""
            int r2 = r6.getResponseCode()     // Catch: java.lang.Throwable -> L84 java.io.IOException -> L87
            r3 = 200(0xc8, float:2.8E-43)
            if (r2 != r3) goto L72
            java.io.InputStreamReader r2 = new java.io.InputStreamReader     // Catch: java.lang.Throwable -> L84 java.io.IOException -> L87
            java.io.InputStream r3 = r6.getInputStream()     // Catch: java.lang.Throwable -> L84 java.io.IOException -> L87
            r2.<init>(r3)     // Catch: java.lang.Throwable -> L84 java.io.IOException -> L87
            java.io.BufferedReader r3 = new java.io.BufferedReader     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            r3.<init>(r2)     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
        L50:
            java.lang.String r4 = r3.readLine()     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            if (r4 == 0) goto L6e
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            r5.<init>()     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            java.lang.StringBuilder r7 = r5.append(r7)     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            java.lang.StringBuilder r7 = r7.append(r4)     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            java.lang.String r4 = "\n"
            java.lang.StringBuilder r7 = r7.append(r4)     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            java.lang.String r7 = r7.toString()     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            goto L50
        L6e:
            r2.close()     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            goto L73
        L72:
            r2 = r0
        L73:
            r6.disconnect()     // Catch: java.io.IOException -> L82 java.lang.Throwable -> La0
            com.unia.y.cb.a(r1)
            com.unia.y.cb.a(r2)
            if (r6 == 0) goto L81
            r6.disconnect()
        L81:
            return r7
        L82:
            r7 = move-exception
            goto L98
        L84:
            r7 = move-exception
            r2 = r0
            goto La1
        L87:
            r7 = move-exception
            r2 = r0
            goto L98
        L8a:
            r7 = move-exception
            r2 = r0
            goto La2
        L8d:
            r7 = move-exception
            r1 = r0
            goto L97
        L90:
            r7 = move-exception
            r6 = r0
            r2 = r6
            goto La2
        L94:
            r7 = move-exception
            r6 = r0
            r1 = r6
        L97:
            r2 = r1
        L98:
            com.unia.y.by$a r3 = new com.unia.y.by$a     // Catch: java.lang.Throwable -> La0
            java.lang.String r4 = "httpPost failed"
            r3.<init>(r4, r7)     // Catch: java.lang.Throwable -> La0
            throw r3     // Catch: java.lang.Throwable -> La0
        La0:
            r7 = move-exception
        La1:
            r0 = r1
        La2:
            com.unia.y.cb.a(r0)
            com.unia.y.cb.a(r2)
            if (r6 == 0) goto Lad
            r6.disconnect()
        Lad:
            goto Laf
        Lae:
            throw r7
        Laf:
            goto Lae
        */
        throw new UnsupportedOperationException("Method not decompiled: com.unia.y.by.b(java.lang.String, java.lang.String):java.lang.String");
    }
}
