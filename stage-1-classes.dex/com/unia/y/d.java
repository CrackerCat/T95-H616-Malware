package com.unia.y;

import java.io.InputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.concurrent.ExecutorService;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class d {
    public ExecutorService b;
    public int c;
    public b d;
    public boolean e = false;

    /* renamed from: a  reason: collision with root package name */
    public Socket f538a = new Socket();

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public class a implements Runnable {
        public a() {
        }

        @Override // java.lang.Runnable
        public void run() {
            try {
                byte[] bArr = new byte[4096];
                InputStream inputStream = d.this.f538a.getInputStream();
                while (d.this.e) {
                    try {
                        int read = inputStream.read(bArr);
                        if (d.this.d != null && read > 0) {
                            try {
                                d.this.d.a(d.this, bArr, read);
                            } catch (Exception unused) {
                            }
                        } else if (read <= 0) {
                            d dVar = d.this;
                            dVar.a(dVar.f538a);
                            break;
                        }
                    } catch (Exception unused2) {
                    }
                }
                if (d.this.d == null) {
                    return;
                }
                d.this.d.a(d.this);
            } catch (Exception unused3) {
            }
        }
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    public interface b {
        void a(d dVar);

        void a(d dVar, byte[] bArr, int i);
    }

    public d(ExecutorService executorService, int i) {
        this.c = 0;
        this.b = executorService;
        this.c = i;
    }

    public void a() {
        a(this.f538a);
    }

    public void a(String str, int i) {
        this.f538a.connect(new InetSocketAddress(str, i), 50000);
        this.e = true;
    }

    public final void a(Socket socket) {
        this.e = false;
        try {
            socket.close();
        } catch (Exception unused) {
        }
    }

    public boolean a(b bVar) {
        if (!c()) {
            return false;
        }
        this.d = bVar;
        this.b.submit(new a());
        return true;
    }

    public synchronized boolean a(byte[] bArr) {
        boolean z;
        try {
            this.f538a.getOutputStream().write(bArr);
            this.f538a.getOutputStream().flush();
            z = true;
        } catch (Exception unused) {
            b bVar = this.d;
            if (bVar != null) {
                bVar.a(this);
            }
            z = false;
        }
        return z;
    }

    public int b() {
        return this.c;
    }

    public boolean c() {
        Socket socket;
        return this.e && (socket = this.f538a) != null && socket.isConnected();
    }
}
