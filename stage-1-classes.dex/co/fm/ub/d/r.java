package co.fm.ub.d;

import android.text.TextUtils;
import co.fm.ub.d.l;
import java.util.ArrayList;
import java.util.Iterator;
/* loaded from: /mnt/shared/apks/menSe7ni.dex */
public class r extends tt<m> {
    public static final boolean zKLx = false;

    /* renamed from: co.fm.ub.d.r$1  reason: invalid class name */
    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    static /* synthetic */ class AnonymousClass1 {
        public static final boolean tRPl = false;
    }

    /* loaded from: /mnt/shared/apks/menSe7ni.dex */
    private class d {
        public static final boolean IbQU = false;
        private int H;
        private int k;
        final /* synthetic */ r o;

        private d(r rVar, int i, int i2) {
            boolean z = IbQU;
            this.o = rVar;
            if (!z) {
                this.k = i;
                if (z) {
                    return;
                }
                this.H = i2;
                if (!z) {
                }
            }
        }

        /* synthetic */ d(r rVar, int i, int i2, AnonymousClass1 anonymousClass1) {
            this(rVar, i, i2);
        }

        public static /* bridge */ /* synthetic */ String ZsJa(int i) {
            return new String[]{"㯔㯟㯀㯜㮕㮏㮊㯜㮃㮏㯜㯌㯀㯝㯊㮕㮏㮊㯜㯒"}[i];
        }

        static /* synthetic */ int k(d dVar) {
            if (!IbQU) {
                return dVar.k;
            }
            return 0;
        }

        static /* synthetic */ int o(d dVar) {
            if (!IbQU) {
                return dVar.H;
            }
            return 0;
        }

        public String toString() {
            if (!IbQU) {
                return String.format(l.AnonymousClass1.KL67(ZsJa(0), null, 42462), Integer.valueOf(this.k), Integer.valueOf(this.H));
            }
            return null;
        }
    }

    public r(Object obj) {
        super(obj, m.class);
    }

    public static /* bridge */ /* synthetic */ String ZsJa(int i) {
        return new String[]{"\u2d76\u2d75⵰ⴴ\u2d7d⵰", "ΰθΥΡάϵιμΦΡ", "㫥㫦㫣㪧㫮㫩"}[i];
    }

    public int o(m mVar) {
        boolean z = zKLx;
        if (!z && !z) {
            try {
                int H = H();
                if (!z) {
                    if (H <= 0) {
                        if (!z) {
                            throw new dt(l.AnonymousClass1.KL67(ZsJa(1), null, 40356));
                        }
                    } else if (!z) {
                        if (mVar == null) {
                            if (!z) {
                                throw new dt(l.AnonymousClass1.KL67(ZsJa(2), null, 42230));
                            }
                        } else if (!z) {
                            ArrayList arrayList = new ArrayList();
                            if (!z && !z && !z) {
                                int i = 0;
                                while (true) {
                                    if (z) {
                                        break;
                                    } else if (i < H) {
                                        if (z) {
                                            break;
                                        }
                                        m o = o(i);
                                        if (z) {
                                            break;
                                        }
                                        int o2 = mVar.o(o);
                                        if (!z) {
                                            if (o2 > 0) {
                                                if (z) {
                                                    break;
                                                }
                                                d dVar = new d(this, i, o2, null);
                                                if (z) {
                                                    break;
                                                }
                                                arrayList.add(dVar);
                                                if (z) {
                                                    break;
                                                }
                                            }
                                            if (z) {
                                                break;
                                            }
                                            i++;
                                            if (z) {
                                                break;
                                            } else if (z) {
                                                throw null;
                                            }
                                        } else {
                                            break;
                                        }
                                    } else if (!z && !z && !z) {
                                        Iterator it = arrayList.iterator();
                                        if (!z) {
                                            d dVar2 = null;
                                            int i2 = 0;
                                            while (true) {
                                                if (z) {
                                                    break;
                                                } else if (it.hasNext()) {
                                                    if (z) {
                                                        break;
                                                    }
                                                    d dVar3 = (d) it.next();
                                                    if (!z) {
                                                        if (d.o(dVar3) <= i2) {
                                                            if (!z) {
                                                                if (d.o(dVar3) == i2) {
                                                                    if (z || z) {
                                                                        break;
                                                                    }
                                                                    dVar2 = null;
                                                                }
                                                            } else {
                                                                break;
                                                            }
                                                        } else if (z || z) {
                                                            break;
                                                        } else {
                                                            i2 = d.o(dVar3);
                                                            if (z) {
                                                                break;
                                                            } else if (z) {
                                                                throw null;
                                                            } else {
                                                                dVar2 = dVar3;
                                                            }
                                                        }
                                                        if (z) {
                                                            break;
                                                        } else if (z) {
                                                            throw null;
                                                        }
                                                    } else {
                                                        break;
                                                    }
                                                } else if (!z) {
                                                    if (dVar2 != null) {
                                                        if (!z) {
                                                            return d.k(dVar2);
                                                        }
                                                    } else if (!z) {
                                                        return -1;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } catch (Throwable unused) {
                if (!z) {
                    return -1;
                }
            }
        }
        return 0;
    }

    public m o(String str) {
        if (!zKLx) {
            return o(str, 0, 0);
        }
        return null;
    }

    public m o(String str, int i, int i2) {
        boolean z = zKLx;
        if (!z && !z) {
            try {
                if (TextUtils.isEmpty(str)) {
                    if (!z) {
                        throw new dt(l.AnonymousClass1.KL67(ZsJa(0), null, 45925));
                    }
                } else if (!z) {
                    if (i > 0) {
                        if (!z) {
                            if (i2 >= i) {
                                if (!z) {
                                    return null;
                                }
                            }
                        }
                    }
                    if (!z) {
                        Iterator<m> it = iterator();
                        if (!z) {
                            while (true) {
                                if (z) {
                                    break;
                                } else if (it.hasNext()) {
                                    if (z) {
                                        break;
                                    }
                                    m next = it.next();
                                    if (!z) {
                                        if (next != null) {
                                            if (z) {
                                                break;
                                            } else if (str.equals(next.k())) {
                                                if (!z) {
                                                    return next;
                                                }
                                            }
                                        }
                                        if (z) {
                                            break;
                                        } else if (z) {
                                            throw null;
                                        }
                                    } else {
                                        break;
                                    }
                                } else if (!z) {
                                    if (i > 0) {
                                        if (!z) {
                                            if (i2 + 1 >= i) {
                                                if (!z) {
                                                    return null;
                                                }
                                            }
                                        }
                                    }
                                    if (!z) {
                                        Iterator<m> it2 = iterator();
                                        if (!z) {
                                            while (true) {
                                                if (z) {
                                                    break;
                                                } else if (it2.hasNext()) {
                                                    if (z) {
                                                        break;
                                                    }
                                                    m next2 = it2.next();
                                                    if (!z) {
                                                        if (next2 != null) {
                                                            if (z) {
                                                                break;
                                                            }
                                                            m o = next2.o(str, i, i2 + 1);
                                                            if (!z) {
                                                                if (o == null) {
                                                                    if (z) {
                                                                        break;
                                                                    } else if (z) {
                                                                        throw null;
                                                                    }
                                                                } else if (!z) {
                                                                    return o;
                                                                }
                                                            } else {
                                                                break;
                                                            }
                                                        } else if (z) {
                                                            break;
                                                        } else if (z) {
                                                            throw null;
                                                        }
                                                    } else {
                                                        break;
                                                    }
                                                } else if (!z) {
                                                    return null;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } catch (Throwable unused) {
                if (!z) {
                }
            }
        }
        return null;
    }
}
